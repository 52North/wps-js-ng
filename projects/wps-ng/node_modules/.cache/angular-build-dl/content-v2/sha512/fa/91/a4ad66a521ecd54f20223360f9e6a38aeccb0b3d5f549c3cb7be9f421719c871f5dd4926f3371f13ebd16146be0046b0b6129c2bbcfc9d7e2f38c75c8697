{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./dist/wps-ng/__ivy_ngcc__/fesm2015/wps-ng.js","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/core/model/capabilities/address.ts","./src/app/core/model/capabilities/capabilities-response.ts","./src/app/core/model/capabilities/capabilities.ts","./src/app/core/model/capabilities/contact-info.ts","./src/app/core/model/capabilities/dcp.ts","./src/app/core/model/capabilities/http.ts","./src/app/core/model/capabilities/operation.ts","./src/app/core/model/capabilities/process.ts","./src/app/core/model/capabilities/service-contact.ts","./src/app/core/model/capabilities/service-identification.ts","./src/app/core/model/capabilities/service-provider.ts","./src/app/core/model/execute.process/request/input/b-box-data-input.ts","./src/app/core/model/execute.process/request/input/complex-data-input.ts","./src/app/core/model/execute.process/request/input/literal-data-input.ts","./src/app/core/model/execute.process/request/output/b-box-data-output.ts","./src/app/core/model/execute.process/request/output/complex-data-output.ts","./src/app/core/model/execute.process/request/output/literal-data-output.ts","./src/app/core/model/execute.process/response/execute-output.ts","./src/app/core/model/execute.process/response/execute-response-data.ts","./src/app/core/model/execute.process/response/execute-response-document.ts","./src/app/core/model/execute.process/response/execute-response-object.ts","./src/app/core/model/execute.process/response/execute-response.ts","./src/app/core/model/execute.process/response/status.ts","./src/app/core/model/process.description/complex-data.ts","./src/app/core/model/process.description/data-type.ts","./src/app/core/model/process.description/format.ts","./src/app/core/model/process.description/input.ts","./src/app/core/model/process.description/literal-data-domains.ts","./src/app/core/model/process.description/literal-data.ts","./src/app/core/model/process.description/output.ts","./src/app/core/model/process.description/process-description-response.ts","./src/app/core/model/process.description/process-details.ts","./src/app/core/model/process.description/process-offering.ts","./src/app/core/settings.ts","./src/app/execute-examples/execute-examples.component.ts","./src/app/execute-examples/execute-examples.component.html","./src/app/wps-example/wps-example.component.ts","./src/app/wps-example/wps-example.component.html","./src/app/wps-service-ts.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { ɵɵdefineInjectable, Injectable, Component, NgModule } from '@angular/core';\n\nimport * as ɵngcc0 from '@angular/core';\nclass WpsNgService {\n    constructor() { }\n}\nWpsNgService.ɵfac = function WpsNgService_Factory(t) { return new (t || WpsNgService)(); };\nWpsNgService.ɵprov = ɵɵdefineInjectable({ factory: function WpsNgService_Factory() { return new WpsNgService(); }, token: WpsNgService, providedIn: \"root\" });\nWpsNgService.ctorParameters = () => [];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(WpsNgService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return []; }, null); })();\n\nclass WpsNgComponent {\n    constructor() { }\n    ngOnInit() {\n    }\n}\nWpsNgComponent.ɵfac = function WpsNgComponent_Factory(t) { return new (t || WpsNgComponent)(); };\nWpsNgComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: WpsNgComponent, selectors: [[\"lib-wps-ng\"]], decls: 2, vars: 0, template: function WpsNgComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"p\");\n        ɵngcc0.ɵɵtext(1, \" wps-ng works! \");\n        ɵngcc0.ɵɵelementEnd();\n    } }, encapsulation: 2 });\nWpsNgComponent.ctorParameters = () => [];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(WpsNgComponent, [{\n        type: Component,\n        args: [{\n                selector: 'lib-wps-ng',\n                template: `\n    <p>\n      wps-ng works!\n    </p>\n  `\n            }]\n    }], function () { return []; }, null); })();\n\nclass WpsNgModule {\n}\nWpsNgModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: WpsNgModule });\nWpsNgModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function WpsNgModule_Factory(t) { return new (t || WpsNgModule)(); }, imports: [[]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(WpsNgModule, { declarations: [WpsNgComponent], exports: [WpsNgComponent] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(WpsNgModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [WpsNgComponent],\n                imports: [],\n                exports: [WpsNgComponent]\n            }]\n    }], null, null); })();\n\n/*\n * Public API Surface of wps-ng\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { WpsNgComponent, WpsNgModule, WpsNgService };\n\n//# sourceMappingURL=wps-ng.js.map","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'wps-js-ng';\n}\n","<app-wps-example></app-wps-example>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { WpsExampleComponent } from './wps-example/wps-example.component';\nimport {FormsModule} from '@angular/forms';\nimport { ExecuteExamplesComponent } from './execute-examples/execute-examples.component';\nimport {WpsNgModule} from 'wps-ng';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WpsExampleComponent,\n    ExecuteExamplesComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    WpsNgModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class Address {\n\n  private readonly _deliveryPoint: string;\n  private readonly _city: string;\n  private readonly _administrativeArea: string;\n  private readonly _postalCode: string;\n  private readonly _country: string;\n  private readonly _electronicMailAddress: string;\n\n  constructor(addressJson: any) {\n    this._deliveryPoint = addressJson.deliveryPoint;\n    this._city = addressJson.city;\n    this._administrativeArea = addressJson.administrativeArea;\n    this._postalCode = addressJson.postalCode;\n    this._country = addressJson.country;\n    this._electronicMailAddress = addressJson.electronicMailAddress;\n  }\n\n  get deliveryPoint(): string {\n    return this._deliveryPoint;\n  }\n\n  get city(): string {\n    return this._city;\n  }\n\n  get administrativeArea(): string {\n    return this._administrativeArea;\n  }\n\n  get postalCode(): string {\n    return this._postalCode;\n  }\n\n  get country(): string {\n    return this._country;\n  }\n\n  get electronicMailAddress(): string {\n    return this._electronicMailAddress;\n  }\n}\n","import {Capabilities} from './capabilities';\n\nexport class CapabilitiesResponse {\n  private readonly _responseDocument: Document;\n  private readonly _capabilities: Capabilities;\n\n  constructor(capabilitiesResponseJson: any) {\n    this._responseDocument = capabilitiesResponseJson.responseDocument;\n    this._capabilities = new Capabilities(capabilitiesResponseJson.capabilities);\n  }\n\n\n  get responseDocument(): Document {\n    return this._responseDocument;\n  }\n\n  get capabilities(): Capabilities {\n    return this._capabilities;\n  }\n}\n","import {ServiceIdentification} from './service-identification';\nimport {ServiceProvider} from './service-provider';\nimport {Operation} from './operation';\nimport {Process} from './process';\n\nexport class Capabilities {\n\n  private readonly _service: string;\n  private readonly _version: string;\n  private readonly _serviceIdentification: ServiceIdentification;\n  private readonly _serviceProvider: ServiceProvider;\n  private readonly _operations: Operation[];\n  private readonly _languages: string[];\n  private readonly _processes: Process[];\n\n  constructor(capabilitiesJson: any) {\n    if (capabilitiesJson != null) {\n      this._service = capabilitiesJson.service;\n      this._version = capabilitiesJson.version;\n      this._serviceIdentification = new ServiceIdentification(capabilitiesJson.serviceIdentification);\n      this._serviceProvider = new ServiceProvider(capabilitiesJson.serviceProvider);\n      this._operations = new Array<Operation>();\n      capabilitiesJson.operations?.forEach(e => {\n        this._operations.push(new Operation(e));\n      });\n      this._languages = new Array<string>();\n      capabilitiesJson.languages?.forEach(e => {\n        this._languages.push(e);\n      });\n\n      this._processes = new Array<Process>();\n      capabilitiesJson.processes?.forEach(e => {\n        this._processes.push(new Process(e));\n      });\n      this._processes = capabilitiesJson.processes;\n    }\n  }\n\n  get service(): string {\n    return this._service;\n  }\n\n  get version(): string {\n    return this._version;\n  }\n\n  get serviceIdentification(): ServiceIdentification {\n    return this._serviceIdentification;\n  }\n\n  get serviceProvider(): ServiceProvider {\n    return this._serviceProvider;\n  }\n\n  get operations(): Operation[] {\n    return this._operations;\n  }\n\n  get languages(): string[] {\n    return this._languages;\n  }\n\n  get processes(): Process[] {\n    return this._processes;\n  }\n}\n","import {Address} from './address';\n\nexport class ContactInfo {\n\n  private readonly _address: Address;\n\n  constructor(contactInfoJson: any) {\n    if (contactInfoJson != null) {\n      this._address = new Address(contactInfoJson.address);\n    }\n  }\n\n  get address(): Address {\n    return this._address;\n  }\n}\n","import {HTTP} from './http';\nexport class DCP {\n\n  private readonly _HTTP: HTTP;\n\n  constructor(DCPJson: any) {\n    if (DCPJson != null) {\n      this._HTTP = new HTTP(DCPJson.HTTP);\n    }\n  }\n\n  get HTTP(): HTTP {\n    return this._HTTP;\n  }\n}\n","export class HTTP {\n\n  private readonly _name: string;\n  private readonly _get: string;\n  private readonly _post: string;\n\n  constructor(HTTPJson: any) {\n    if (HTTPJson != null)\n    {\n      this._name = HTTPJson.name;\n      this._get = HTTPJson.get;\n      this._post = HTTPJson.post;\n    }\n  }\n\n  get name(): string {\n    return this._name;\n  }\n\n  get get(): string {\n    return this._get;\n  }\n\n  get post(): string {\n    return this._post;\n  }\n}\n","import {DCP} from './dcp';\n\nexport class Operation {\n  private readonly _DCP: DCP;\n\n  constructor(operationJson: any) {\n    if (operationJson != null){\n      this._DCP = new DCP(operationJson.DCP);\n    }\n  }\n\n  get DCP(): DCP {\n    return this._DCP;\n  }\n}\n","export class Process {\n  private readonly _title: string;\n  private readonly _identifier: string;\n  private readonly _processVersion: string;\n  private readonly _jobControlOptions: string;\n  private readonly _outputTransmission: string;\n\n  constructor(processJson: any) {\n    if (processJson != null){\n      this._title = processJson.title;\n      this._identifier = processJson.identifier;\n      this._processVersion = processJson.processVersion;\n      this._jobControlOptions = processJson.jobControlOptions;\n      this._outputTransmission = processJson.outputTransmission;\n    }\n  }\n\n  get title(): string {\n    return this._title;\n  }\n\n  get identifier(): string {\n    return this._identifier;\n  }\n\n  get processVersion(): string {\n    return this._processVersion;\n  }\n\n  get jobControlOptions(): string {\n    return this._jobControlOptions;\n  }\n\n  get outputTransmission(): string {\n    return this._outputTransmission;\n  }\n}\n","import {ContactInfo} from './contact-info';\n\nexport class ServiceContact {\n\n  private readonly _individualName: string;\n  private readonly _contactInfo: ContactInfo;\n\n  get individualName(): string {\n    return this._individualName;\n  }\n\n  get contactInfo(): ContactInfo {\n    return this._contactInfo;\n  }\n  constructor(serviceContactJson: any) {\n    if (serviceContactJson != null){\n      this._individualName = serviceContactJson.individualName;\n      this._contactInfo = new ContactInfo(serviceContactJson.contactInfo);\n    }\n\n\n  }\n}\n","export class ServiceIdentification {\n\n  private readonly _title: string;\n  private readonly _abstractValue: string;\n  private readonly _keywords: string[];\n  private readonly _serviceType: string;\n  private readonly _serviceTypeVersions: string[];\n  private readonly _fees: string;\n  private readonly _accessConstraints: string;\n\n  constructor(serviceIdentificationJson: any) {\n    if (serviceIdentificationJson != null){\n      this._title = serviceIdentificationJson.title;\n      this._abstractValue = serviceIdentificationJson.abstractValue;\n      this._keywords = new Array<string>();\n      serviceIdentificationJson.keywords?.forEach( (e: string) => {\n        this._keywords.push(e);\n      });\n      this._serviceType = serviceIdentificationJson.serviceType;\n      this._serviceTypeVersions = new Array<string>();\n      serviceIdentificationJson.serviceTypeVersions?.forEach( (e: string) => {\n        this._serviceTypeVersions.push(e);\n      });\n      this._fees =  serviceIdentificationJson.fees;\n      this._accessConstraints = serviceIdentificationJson.accessConstraints;\n    }\n  }\n\n  get title(): string {\n    return this._title;\n  }\n\n  get abstractValue(): string {\n    return this._abstractValue;\n  }\n\n  get keywords(): string[] {\n    return this._keywords;\n  }\n\n  get serviceType(): string {\n    return this._serviceType;\n  }\n\n  get serviceTypeVersions(): string[] {\n    return this._serviceTypeVersions;\n  }\n\n  get fees(): string {\n    return this._fees;\n  }\n\n  get accessConstraints(): string {\n    return this._accessConstraints;\n  }\n}\n","import {ServiceContact} from './service-contact';\n\nexport class ServiceProvider {\n\n  private readonly _providerName: string;\n  private readonly _serviceContact: ServiceContact;\n\n  constructor(serviceProviderJson: any) {\n    if (serviceProviderJson != null){\n      this._providerName = serviceProviderJson.providerName;\n      this._serviceContact = new ServiceContact(serviceProviderJson.serviceContact);\n    }\n\n  }\n\n  get providerName(): string {\n    return this._providerName;\n  }\n\n  get serviceContact(): ServiceContact {\n    return this._serviceContact;\n  }\n\n}\n","import {DataInput} from './data-input';\n\nexport class BBoxDataInput implements DataInput{\n   identifier: string;\n   type: string;\n   crs: string;\n   dimension: string;\n   lowerCorner: string;\n   upperCorner: string;\n\n  /**\n   * the following parameters are mandatory: identifier, crs,\n   * lowerCorner and upperCorner\n   *\n   * the rest might be set to 'undefined'!\n   *\n   * @identifier input-request identifier\n   * @crs coordinate reference system URI\n   * @dimension number of dimensions in this CRS\n   * @lowerCorner orderedSequence of double values\n   * @upperCorner orderedSequence of double values\n   */\n\n  constructor( identifier: string, crs: string, dimension: string, lowerCorner: string, upperCorner: string) {\n    this.type = 'bbox';\n    this.identifier = identifier;\n    this.crs = crs;\n    this.dimension = dimension || undefined;\n    this.lowerCorner = lowerCorner;\n    this.upperCorner = upperCorner;\n  }\n}\n","import {DataInput} from './data-input';\n\nexport class ComplexDataInput implements DataInput{\n  type: string;\n  identifier: string;\n  mimeType: string;\n  schema: string;\n  encoding: string;\n  asReference: boolean;\n  complexPayload: any;\n\n  /**\n   * the following parameters are mandatory: identifier and\n   * complexPayload\n   *\n   * the rest might be set to 'undefined'!\n   *\n   * @identifier input-request identifier\n   * @mimeType MIME type of the input-request; may be 'undefined'\n   * @schema reference to a schema; may be 'undefined'\n   * @encoding encoding; may be 'undefined'\n   * @complexPayload the complex payload (XML tags) as String\n   * @asReference boolean, either \"true\" or \"false\", indicating\n   *              whether parameter body contains a URL as reference\n   *              to an external body or the actual POST body\n   */\n\n\n  constructor(identifier: string, mimeType: string,\n              schema: string, encoding: string,\n              asReference: boolean = false, complexPayload: any) {\n    this.type = 'complex';\n    this.identifier = identifier;\n    this.mimeType = mimeType;\n    this.schema = schema;\n    this.encoding = encoding;\n    this.asReference = asReference;\n    this.complexPayload = complexPayload;\n  }\n}\n","import {DataInput} from './data-input';\n\nexport class LiteralDataInput implements DataInput{\n  type: string;\n  identifier: string;\n  dataType: string;\n  uom: string;\n  value: string;\n\n  /**\n   * the following parameters are mandatory: identifier and value\n   *\n   * the rest might be set to 'undefined'!\n   *\n   * @identifier input-request identifier\n   * @dataType data type of the input-request; may be 'undefined'\n   * @uom unit of measure; may be 'undefined'\n   * @value the literal value of the input-request\n   */\n  constructor(identifier: string, dataType: string, uom: string, value: string) {\n    this.type = 'literal';\n    this.identifier = identifier;\n    this.dataType = dataType;\n    this.uom = uom;\n    this.value = value;\n  }\n\n}\n","import {DataOutput} from './data-output';\n\nexport class BBoxDataOutput implements DataOutput{\n  readonly _type: string;\n  readonly _identifier: string;\n  readonly _mimeType: string;\n  readonly _schema: string;\n  readonly _encoding: string;\n  readonly _crs: string;\n  readonly _dimensions: string;\n  readonly _lowerCorner: string;\n  readonly _upperCorner: string;\n\n\n  constructor(identifier: string, mimeType: string, schema: string, encoding: string, crs: string,\n              dimensions: string, lowerCorner: string, upperCorner: string) {\n    this._type = 'bbox';\n    this._identifier = identifier;\n    this._mimeType = mimeType;\n    this._schema = schema;\n    this._encoding = encoding;\n    this._crs = crs;\n    this._dimensions = dimensions;\n    this._lowerCorner = lowerCorner;\n    this._upperCorner = upperCorner;\n  }\n\n  get identifier(): string {\n    return this._identifier;\n  }\n\n  get type(): string {\n    return this._type;\n  }\n\n  get crs(): string {\n    return this._crs;\n  }\n\n  get dimensions(): string {\n    return this._dimensions;\n  }\n\n  get lowerCorner(): string {\n    return this._lowerCorner;\n  }\n\n  get upperCorner(): string {\n    return this._upperCorner;\n  }\n}\n","import {DataOutput} from './data-output';\n\nexport class ComplexDataOutput implements  DataOutput {\n  type: string;\n  identifier: string;\n  mimeType: string;\n  schema: string;\n  encoding: string;\n  uom: string;\n  asReference: boolean;\n  title: string;\n  abstractValue: any;\n  value: any;\n  transmission: string;\n\n  /**\n   * the following parameters are mandatory: identifier\n   *\n   * the rest might be set to 'undefined'!\n   *\n   * @identifier output-request identifier\n   * @mimeType MIME type of the input; may be 'undefined'\n   * @schema reference to a schema; may be 'undefined'\n   * @encoding encoding; may be 'undefined'\n   * @uom unit of measure; may be 'undefined'\n   * @asReference boolean, \"true\" or \"false\"\n   * @title new title\n   * @abstractValue new description as text of the 'Abstract' element\n   *          of the response document\n   */\n\n\n  constructor(identifier: string, mimeType: string, schema: string, encoding: string,\n              uom: string, asReference: boolean = false, title: string, abstractValue: any, value?: any, transmission?: string) {\n    this.type = 'complex';\n    this.identifier = identifier;\n    this.mimeType = mimeType;\n    this.schema = schema;\n    this.encoding = encoding;\n    this.uom = uom;\n    this.asReference = asReference;\n    this.title = title;\n    this.abstractValue = abstractValue;\n    this.value = value;\n    this.transmission = transmission;\n  }\n}\n","import {DataOutput} from './data-output';\n\nexport class LiteralDataOutput implements DataOutput{\n  readonly _type: string;\n  readonly _identifier: string;\n  readonly _mimeType: string;\n  readonly _schema: string;\n  readonly _encoding: string;\n  readonly _asReference: boolean;\n  readonly _abstractValue: any;\n  readonly _dataType: string;\n  readonly _uom: string;\n  readonly _value: any;\n\n\n  constructor(identifier: string, mimeType: string, schema: string, encoding: string, asReference: boolean = false,\n              abstractValue: any, dataType: string, uom: string, value: string) {\n    this._type = 'literal';\n    this._identifier = identifier;\n    this._mimeType = mimeType;\n    this._schema = schema;\n    this._encoding = encoding;\n    this._asReference = asReference;\n    this._abstractValue = abstractValue;\n    this._dataType = dataType;\n    this._uom = uom;\n    this._value = value;\n  }\n\n  get type(): string {\n    return this._type;\n  }\n\n  get identifier(): string {\n    return this._identifier;\n  }\n\n  get asReference(): boolean {\n    return this._asReference;\n  }\n\n  get abstractValue(): any {\n    return this._abstractValue;\n  }\n\n  get dataType(): string {\n    return this._dataType;\n  }\n\n  get uom(): string {\n    return this._uom;\n  }\n\n  get value(): any {\n    return this._value;\n  }\n}\n","import {ExecuteResponseData} from './execute-response-data';\n\nexport class ExecuteOutput {\n  private readonly _identifier: string;\n  private readonly _title: string;\n  private readonly _abstractValue: any;\n  private readonly _data: ExecuteResponseData;\n\n  constructor(executeOutput: any) {\n    this._identifier = executeOutput.identifier;\n    this._title = executeOutput.title;\n    this._abstractValue = executeOutput.abstractValue;\n    this._data = new ExecuteResponseData(executeOutput.data);\n  }\n\n  get identifier(): string {\n    return this._identifier;\n  }\n\n  get title(): string {\n    return this._title;\n  }\n\n  get data(): ExecuteResponseData {\n    return this._data;\n  }\n\n  get abstractValue(): any {\n    return this._abstractValue;\n  }\n}\n","import {ComplexDataOutput} from '../request/output/complex-data-output';\nimport {DataOutput} from '../request/output/data-output';\nimport {BBoxDataOutput} from '../request/output/b-box-data-output';\nimport {LiteralDataOutput} from '../request/output/literal-data-output';\n\nexport class ExecuteResponseData {\n  private readonly _data: DataOutput;\n\n  constructor(data: any) {\n    if ( data != null && data.complexData != null){\n      this._data = new ComplexDataOutput(\n        data.complexData.identifier,\n        data.complexData.mimeType,\n        data.complexData.schema,\n        data.complexData.encoding,\n        data.complexData.uom,\n        data.complexData.asReference,\n        data.complexData.title,\n        data.complexData.abstractValue,\n        data.complexData.value);\n    }\n    if ( data != null && data.literalData != null) {\n      this._data = new LiteralDataOutput(\n        data.literalData.identifier,\n        data.literalData.mimeType,\n        data.literalData.schema,\n        data.literalData.encoding,\n        data.literalData.asReference,\n        data.literalData.abstractValue,\n        data.literalData.dataType,\n        data.literalData.uom,\n        data.literalData.value);\n    }\n\n    if ( data != null && data.boundingBoxData != null) {\n      this._data = new BBoxDataOutput(\n        data.boundingBoxData.identifier,\n        data.boundingBoxData.mimeType,\n        data.boundingBoxData.schema,\n        data.boundingBoxData.encoding,\n        data.boundingBoxData.crs,\n        data.boundingBoxData.dimensions,\n        data.boundingBoxData.lowerCorner,\n        data.boundingBoxData.upperCorner);\n    }\n  }\n\n  get data(): DataOutput {\n    return this._data;\n  }\n}\n","import {Process} from '../../capabilities/process';\nimport {ExecuteOutput} from './execute-output';\nimport {Status} from './status';\n\nexport class ExecuteResponseDocument {\n  // Property only for Version 2\n  private readonly _jobId: string;\n  // Property only for Async call\n  private readonly _statusLocation: string;\n  private readonly _expirationDate: string;\n\n  private readonly _service: string;\n  private readonly _version: string;\n  private readonly _serviceInstance: string;\n  private readonly _process: Process;\n  private readonly _status: Status;\n  private readonly _outputs: ExecuteOutput[];\n\n  constructor(executeResponseDocumentJson: any) {\n    if (executeResponseDocumentJson != null){\n      this._service = executeResponseDocumentJson.service;\n      this._version = executeResponseDocumentJson.version;\n      this._statusLocation = executeResponseDocumentJson.statusLocation;\n      this._serviceInstance = executeResponseDocumentJson.serviceInstance;\n      this._process = new Process(executeResponseDocumentJson.process);\n      this._status = new Status(executeResponseDocumentJson.status);\n      this._outputs = new Array<ExecuteOutput>();\n      executeResponseDocumentJson.outputs?.forEach(e => {\n        this._outputs.push(new ExecuteOutput(e));\n      });\n      this._jobId = executeResponseDocumentJson.jobId;\n      this._expirationDate = executeResponseDocumentJson.expirationDate;\n    }\n  }\n\n  get service(): string {\n    return this._service;\n  }\n\n  get version(): string {\n    return this._version;\n  }\n\n  get statusLocation(): string {\n    return this._statusLocation;\n  }\n\n  get serviceInstance(): string {\n    return this._serviceInstance;\n  }\n\n  get process(): Process {\n    return this._process;\n  }\n\n  get status(): Status {\n    return this._status;\n  }\n\n  get outputs(): ExecuteOutput[] {\n    return this._outputs;\n  }\n\n  get jobId(): string {\n    return this._jobId;\n  }\n}\n","import {ExecuteResponseDocument} from './execute-response-document';\n\nexport class ExecuteResponseObject {\n  private readonly _type: string;\n  private readonly _serviceVersion: string;\n  private readonly _responseDocument: ExecuteResponseDocument;\n\n  constructor(executeResponseJson: any) {\n    // type: string, serviceVersion: string, responseDocument: ExecuteResponseDocument\n    this._type = executeResponseJson.type;\n    this._serviceVersion = executeResponseJson.serviceVersion;\n    this._responseDocument = new ExecuteResponseDocument(executeResponseJson.responseDocument);\n  }\n\n  get type(): string {\n    return this._type;\n  }\n\n  get serviceVersion(): string {\n    return this._serviceVersion;\n  }\n\n  get responseDocument(): ExecuteResponseDocument {\n    return this._responseDocument;\n  }\n}\n","import {ExecuteResponseObject} from './execute-response-object';\n\nexport class ExecuteResponse {\n  private readonly _resultDocument: Document;\n  private readonly _executeResponse: ExecuteResponseObject;\n\n  constructor(executeResponseJson: any) {\n    if (executeResponseJson != null) {\n      this._resultDocument = executeResponseJson.responseDocument;\n      this._executeResponse = new ExecuteResponseObject(executeResponseJson.executeResponse);\n    }\n  }\n\n  get resultDocument(): Document {\n    return this._resultDocument;\n  }\n\n  get executeResponse(): ExecuteResponseObject {\n    return this._executeResponse;\n  }\n}\n","\nexport class Status {\n  private readonly _creationTime: Date;\n  private readonly _info: string;\n\n  constructor(statusJson: any) {\n    if (statusJson != null){\n      this._creationTime = statusJson.creationTime;\n      this._info = statusJson.info;\n    }\n  }\n\n  get creationTime(): Date {\n    return this._creationTime;\n  }\n\n  get info(): string {\n    return this._info;\n  }\n}\n","import {Format} from './format';\n\nexport class ComplexData {\n  private readonly _formats: Format[];\n\n  constructor(complexDataResponse: any) {\n    if (complexDataResponse != null){\n      this._formats = new Array<Format>();\n      complexDataResponse.formats?.forEach( e => {\n        this._formats.push(new Format(e));\n      });\n    }\n  }\n\n  get formats(): Format[] {\n    return this._formats;\n  }\n}\n\n","export class DataType {\n  private readonly _type: string;\n  private readonly _reference: string;\n\n  constructor(dataType: any) {\n    this._type = dataType.type;\n    this._reference = dataType.reference;\n  }\n\n  get type(): string {\n    return this._type;\n  }\n\n  get reference(): string {\n    return this._reference;\n  }\n}\n","export class Format {\n  private readonly _mimeType: string;\n  private readonly _encoding: string;\n  private readonly _schema: string;\n\n  constructor(formatResponse: any) {\n    if ( formatResponse != null){\n      this._mimeType = formatResponse.mimeType;\n      this._encoding = formatResponse.encoding;\n      this._schema = formatResponse.schema;\n    }\n  }\n\n  get mimeType(): string {\n    return this._mimeType;\n  }\n\n  get encoding(): string {\n    return this._encoding;\n  }\n\n  get schema(): string {\n    return this._schema;\n  }\n}\n","import {LiteralData} from './literal-data';\n\nexport class Input {\n  private readonly _title: string;\n  private readonly _abstractValue: string;\n  private readonly _identifier: string;\n  private readonly _minOccurs: string;\n  private readonly _maxOccurs: string;\n  private readonly _literalData: LiteralData;\n\n  constructor(inputResponse: any) {\n    if (inputResponse != null){\n      this._title = inputResponse.title;\n      this._abstractValue = inputResponse.abstractValue;\n      this._identifier = inputResponse.identifier;\n      this._minOccurs = inputResponse.minOccurs;\n      this._maxOccurs = inputResponse.maxOccurs;\n      this._literalData =  new LiteralData(inputResponse.literalData);\n    }\n  }\n\n  get title(): string {\n    return this._title;\n  }\n\n  get abstractValue(): string {\n    return this._abstractValue;\n  }\n\n  get identifier(): string {\n    return this._identifier;\n  }\n\n  get minOccurs(): string {\n    return this._minOccurs;\n  }\n\n  get maxOccurs(): string {\n    return this._maxOccurs;\n  }\n\n  get literalData(): LiteralData {\n    return this._literalData;\n  }\n}\n","import { DataType } from 'src/app/core/model/process.description/data-type';\n\nexport class LiteralDataDomains {\n  private readonly _anyValue: boolean;\n  private readonly _dataType: DataType;\n  private readonly _defaultValue: string;\n  private readonly _unitOfMeasure: string;\n\n\n  constructor(literalDataDomainsJS: any) {\n    this._anyValue = literalDataDomainsJS.anyValue;\n    this._dataType = new DataType(literalDataDomainsJS.dataType);\n    this._defaultValue = literalDataDomainsJS.defaultValue;\n    this._unitOfMeasure = literalDataDomainsJS.unitOfMeasure;\n  }\n\n  get anyValue(): boolean {\n    return this._anyValue;\n  }\n\n  get dataType(): DataType {\n    return this._dataType;\n  }\n\n  get defaultValue(): string {\n    return this._defaultValue;\n  }\n\n  get unitOfMeasure(): string {\n    return this._unitOfMeasure;\n  }\n}\n","import { LiteralDataDomains } from 'src/app/core/model/process.description/literal-data-domains';\nimport {Format} from './format';\n\nexport class LiteralData {\n  private readonly _literalDataDomains: LiteralDataDomains[];\n  private readonly _formats: Format[];\n\n  constructor(literalDataResponse: any) {\n    if (literalDataResponse != null){\n      this._formats = new Array<Format>();\n      literalDataResponse.formats?.forEach( e => {\n        this._formats.push(new Format(e));\n      });\n      this._literalDataDomains = new Array<LiteralDataDomains>();\n      literalDataResponse.literalDataDomains?.forEach( e => {\n        this._literalDataDomains.push(new LiteralDataDomains(e));\n      });\n    }\n\n  }\n  get literalDataDomains(): LiteralDataDomains[] {\n    return this._literalDataDomains;\n  }\n\n  get formats(): Format[] {\n    return this._formats;\n  }\n}\n","import { ComplexData } from './complex-data';\n\nexport class Output {\n  private readonly _title: string;\n  private readonly _abstractValue: string;\n  private readonly _identifier: string;\n  private readonly _complexData: ComplexData;\n\n  constructor(outputResponse: any) {\n    if (outputResponse != null){\n      this._title = outputResponse.title;\n      this._abstractValue = outputResponse.abstractValue;\n      this._identifier = outputResponse.identifier;\n      this._complexData = new ComplexData(outputResponse.complexData);\n    }\n  }\n\n  get title(): string {\n    return this._title;\n  }\n\n  get abstractValue(): string {\n    return this._abstractValue;\n  }\n\n  get identifier(): string {\n    return this._identifier;\n  }\n\n  get complexData(): ComplexData {\n    return this._complexData;\n  }\n}\n","import { ProcessOffering } from 'src/app/core/model/process.description/process-offering';\n\nexport class ProcessDescriptionResponse {\n  private readonly _responseDocument: Document;\n  private readonly _processOffering: ProcessOffering;\n\n  constructor(processDescriptionResponse: any) {\n    if (processDescriptionResponse != null){\n      this._responseDocument = processDescriptionResponse.responseDocument;\n      this._processOffering = new ProcessOffering(processDescriptionResponse.processOffering);\n    }\n  }\n\n  get responseDocument(): Document {\n    return this._responseDocument;\n  }\n\n  get processOffering(): ProcessOffering {\n    return this._processOffering;\n  }\n}\n","import { Input } from './input';\nimport { Output } from 'src/app/core/model/process.description/output';\n\nexport class ProcessDetails {\n  private readonly _title: string;\n  private readonly _abstractValue: string;\n  private readonly _identifier: string;\n  private readonly _inputs: Input[];\n  private readonly _outputs: Output[];\n\n\n  constructor(processResponse: any) {\n    if (processResponse != null){\n      this._title = processResponse.title;\n      this._abstractValue = processResponse.abstractValue;\n      this._identifier = processResponse.identifier;\n      this._inputs = new Array<Input>();\n      processResponse.inputs?.forEach( e => {\n        this._inputs.push(new Input(e));\n      });\n      this._outputs = new Array<Output>();\n      processResponse.outputs?.forEach( e => {\n        this._outputs.push(new Output(e));\n      });\n    }\n  }\n\n  get title(): string {\n    return this._title;\n  }\n\n  get abstractValue(): string {\n    return this._abstractValue;\n  }\n\n  get identifier(): string {\n    return this._identifier;\n  }\n\n  get inputs(): Input[] {\n    return this._inputs;\n  }\n\n  get outputs(): Output[] {\n    return this._outputs;\n  }\n}\n","import { ProcessDetails } from 'src/app/core/model/process.description/process-details';\n\nexport class ProcessOffering {\n  private readonly _service: string;\n  private readonly _version: string;\n  private readonly _process: ProcessDetails;\n  private readonly _processVersion: string;\n  private readonly _jobControlOptions: string[];\n  private readonly _outputTransmissionModes: string[];\n\n  constructor(processOfferingResponse: any) {\n    if (processOfferingResponse != null){\n      this._service = processOfferingResponse.service;\n      this._version = processOfferingResponse.version;\n      this._process = new ProcessDetails(processOfferingResponse.process);\n      this._processVersion = processOfferingResponse.processVersion;\n      this._jobControlOptions = new Array<string>();\n      processOfferingResponse.jobControlOptions?.forEach(e => { // TODO: Enquire if this the only possible values are these 2\n        this._jobControlOptions.push(e);\n      });\n      this._outputTransmissionModes = new Array<string>();\n      processOfferingResponse.outputTransmissionModes?.forEach(e => {\n        this._outputTransmissionModes.push(e);\n      });\n    }\n  }\n\n  get service(): string {\n    return this._service;\n  }\n\n  get version(): string {\n    return this._version;\n  }\n\n  get process(): ProcessDetails {\n    return this._process;\n  }\n\n  get processVersion(): string {\n    return this._processVersion;\n  }\n\n  get jobControlOptions(): string[] {\n    return this._jobControlOptions;\n  }\n\n  get outputTransmissionModes(): string[] {\n    return this._outputTransmissionModes;\n  }\n\n\n}\n","export class Settings {\n  url: string;\n  version: string;\n\n  constructor(url:string, version: string,) {\n    this.version = version;\n    this.url = url;\n  }\n}\n","import {Component, OnInit, Output, EventEmitter} from '@angular/core';\nimport {WpsServiceTs} from '../wps-service-ts';\nimport {ExecuteResponse} from '../core/model/execute.process/response/execute-response';\nimport {ComplexDataInput} from '../core/model/execute.process/request/input/complex-data-input';\nimport {LiteralDataInput} from '../core/model/execute.process/request/input/literal-data-input';\nimport {ComplexDataOutput} from '../core/model/execute.process/request/output/complex-data-output';\nimport {DataInput} from '../core/model/execute.process/request/input/data-input';\nimport {DataOutput} from \"../core/model/execute.process/request/output/data-output\";\nimport {BBoxDataInput} from \"../core/model/execute.process/request/input/b-box-data-input\";\nimport {LiteralDataOutput} from \"../core/model/execute.process/request/output/literal-data-output\";\nimport {BBoxDataOutput} from \"../core/model/execute.process/request/output/b-box-data-output\";\n\n@Component({\n  selector: 'app-execute-examples',\n  templateUrl: './execute-examples.component.html',\n  styleUrls: ['./execute-examples.component.css']\n})\nexport class ExecuteExamplesComponent implements OnInit {\n  @Output() messageEvent  = new EventEmitter<any>();\n  urls: string[];\n  versions: string[];\n  selectedURL = 'http://geoprocessing.demo.52north.org:8080/wps/WebProcessingService';\n  selectedVersion = '1.0.0';\n  selectedProcessIdentifier: string;\n  active: boolean;\n  rightScreenTitle: string;\n  rightScreenJsonContent: string;\n  jobIdStatus: string;\n  jobIdResult: string;\n  wpsService: WpsServiceTs;\n  response: ExecuteResponse;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.wpsService = new WpsServiceTs( this.selectedVersion, this.selectedURL);\n    this.urls = [\n      'http://geoprocessing.demo.52north.org:8080/wps/WebProcessingService',\n      'https://ows.terrestris.de/deegree-wps/services',\n      'http://zoo-project.org/cgi-bin/zoo_loader.cgi',\n      'https://maps.dwd.de/geoserver/ows',\n      'https://riesgos.52north.org/wps/WebProcessingService'\n    ];\n    this.versions = ['1.0.0', '2.0.0'];\n    this.rightScreenTitle = 'Output appears here';\n  }\n\n  executeV1Sync() {\n    this.wpsService = new WpsServiceTs('2.0.0', 'http://geoprocessing.demo.52north.org:8080/wps/WebProcessingService');\n    const complexInput = new ComplexDataInput('data',\n      'application/x-zipped-shp',\n      'http://schemas.opengis.net/gml/3.1.1/base/feature.xsd', null, true,\n      'http://geoprocessing.demo.52north.org:8080/geoserver/wfs?SERVICE=WFS&amp;VERSION=1.0.0&amp;REQUEST=GetFeature&amp;TYPENAME=topp:tasmania_roads&amp;SRS=EPSG:4326&amp;OUTPUTFORMAT=GML3');\n    const literalInput = new LiteralDataInput('width', 'xs:double',\n      null, '0.05');\n    const dataInputList = new Array<DataInput>();\n    dataInputList.push(complexInput);\n    dataInputList.push(literalInput);\n\n    const complexDataOutput: ComplexDataOutput = new ComplexDataOutput('result', 'text/xml',\n      'http://schemas.opengis.net/gml/3.1.1/base/feature.xsd',\n      'UTF-8', null, false, 'result', 'result');\n\n    const dataOutputList = new Array<DataOutput>();\n    dataOutputList.push(complexDataOutput);\n\n    this.wpsService.execute((response: ExecuteResponse) => {\n        try {\n          console.log(response);\n          this.response = response;\n          this.sendMessage();\n        } catch (e){\n          console.error(e);\n        }\n      },\n      'org.n52.wps.server.algorithm.SimpleBufferAlgorithm',\n      'document',\n      'sync',\n      false,\n      dataInputList,\n      dataOutputList);\n  }\n\n  executeV1Async() {\n    this.wpsService = new WpsServiceTs('1.0.0', 'http://geoprocessing.demo.52north.org:8080/wps/WebProcessingService');\n    const complexInput = new ComplexDataInput('data',\n      'text/xml',\n      'http://schemas.opengis.net/gml/3.1.1/base/feature.xsd', null, true,\n      'http://geoprocessing.demo.52north.org:8080/geoserver/wfs?SERVICE=WFS&amp;VERSION=1.0.0&amp;REQUEST=GetFeature&amp;TYPENAME=topp:tasmania_roads&amp;SRS=EPSG:4326&amp;OUTPUTFORMAT=GML3');\n    const literalInput = new LiteralDataInput('width', 'xs:double',\n      null, '0.05');\n    const dataInputList = new Array<DataInput>();\n    dataInputList.push(complexInput);\n    dataInputList.push(literalInput);\n\n    const complexDataOutput: ComplexDataOutput = new ComplexDataOutput('result', 'text/xml',\n      'http://schemas.opengis.net/gml/3.1.1/base/feature.xsd',\n      'UTF-8', null, false, 'result', 'result');\n\n    const dataOutputList = new Array<DataOutput>();\n    dataOutputList.push(complexDataOutput);\n\n    this.wpsService.execute((response: ExecuteResponse) => {\n        try {\n          console.log(response);\n          this.response = response;\n          this.sendMessage();\n        } catch (e){\n          console.error(e);\n        }\n      },\n      'org.n52.wps.server.algorithm.SimpleBufferAlgorithm',\n      'document',\n      'async',\n      false,\n      dataInputList,\n      dataOutputList);\n  }\n\n  executeV2Sync() {\n    this.wpsService = new WpsServiceTs('2.0.0', 'http://geoprocessing.demo.52north.org:8080/wps/WebProcessingService');\n    const complexInput = new ComplexDataInput('data',\n      'text/xml', 'http://schemas.opengis.net/gml/3.1.1/base/feature.xsd', null, true,\n      'http://geoprocessing.demo.52north.org:8080/geoserver/wfs?SERVICE=WFS&amp;VERSION=1.0.0&amp;REQUEST=GetFeature&amp;TYPENAME=topp:tasmania_roads&amp;SRS=EPSG:4326&amp;OUTPUTFORMAT=GML3');\n    const literalInput = new LiteralDataInput('width', null,\n      null, '0.05');\n    const inputs = [complexInput, literalInput];\n\n    const complexOutput = new ComplexDataOutput('result', 'text/xml',\n      'http://schemas.opengis.net/gml/3.1.1/base/feature.xsd', 'UTF-8', undefined, undefined, undefined, undefined, undefined, 'value');\n    const outputs = [complexOutput];\n\n\n    this.wpsService.execute( (response => {\n        console.log(response);\n        this.response = response;\n        this.sendMessage();\n      }), 'org.n52.wps.server.algorithm.SimpleBufferAlgorithm', 'document',\n      'sync', false, inputs, outputs);\n  }\n\n  executeV2Async() {\n    this.wpsService = new WpsServiceTs('2.0.0', 'http://geoprocessing.demo.52north.org:8080/wps/WebProcessingService');\n    const complexInput = new ComplexDataInput('data',\n      'text/xml', 'http://schemas.opengis.net/gml/3.1.1/base/feature.xsd', null, true,\n      'http://geoprocessing.demo.52north.org:8080/geoserver/wfs?SERVICE=WFS&amp;VERSION=1.0.0&amp;REQUEST=GetFeature&amp;TYPENAME=topp:tasmania_roads&amp;SRS=EPSG:4326&amp;OUTPUTFORMAT=GML3');\n    const literalInput = new LiteralDataInput('width', null,\n      null, '0.05');\n    const inputs = [complexInput, literalInput];\n\n    const complexOutput = new ComplexDataOutput('result', 'text/xml',\n      'http://schemas.opengis.net/gml/3.1.1/base/feature.xsd', 'UTF-8', undefined, undefined, undefined, undefined, undefined, 'value');\n    const outputs = [complexOutput];\n\n\n    this.wpsService.execute( (response => {\n        console.log(response);\n        this.response = response;\n        this.sendMessage();\n      }), 'org.n52.wps.server.algorithm.SimpleBufferAlgorithm', 'document',\n      'async', false, inputs, outputs);\n  }\n\n  executeExample_SimpleBufferAlgorithm() {\n    this.wpsService = new WpsServiceTs('2.0.0', 'http://geoprocessing.demo.52north.org:8080/wps/WebProcessingService');\n    const complexInput = new ComplexDataInput('data',\n      'text/xml', 'http://schemas.opengis.net/gml/3.1.1/base/feature.xsd', null, true,\n      'http://geoprocessing.demo.52north.org:8080/geoserver/wfs?SERVICE=WFS&amp;VERSION=1.0.0&amp;REQUEST=GetFeature&amp;TYPENAME=topp:tasmania_roads&amp;SRS=EPSG:4326&amp;OUTPUTFORMAT=GML3');\n    const literalInput = new LiteralDataInput('width', null,\n      null, '0.05');\n    const inputs = [complexInput, literalInput];\n\n    const complexOutput = new ComplexDataOutput('result', 'text/xml',\n      'http://schemas.opengis.net/gml/3.1.1/base/feature.xsd', 'UTF-8', undefined, undefined, undefined, undefined, undefined, 'value');\n    const outputs = [complexOutput];\n\n\n    this.wpsService.execute( (response => {\n        console.log(response);\n        this.response = response;\n        this.sendMessage();\n      }), 'org.n52.wps.server.algorithm.SimpleBufferAlgorithm', 'document',\n      'async', false, inputs, outputs);\n  }\n\n\n  executeExample_TiffImage() {\n    this.wpsService = new WpsServiceTs('1.0.0', 'http://geoprocessing.demo.52north.org:8080/wps/WebProcessingService');\n\n    const complexInput = new ComplexDataInput('input',\n      'image/tiff', 'http://www.opengis.net/ows/1.1', undefined, true,\n      'http://geoprocessing.demo.52north.org:8080/xyz/elev_srtm_30m.tif');\n    const inputs = [complexInput];\n\n    const complexOutput = new ComplexDataOutput('output', 'image/tiff',\n      undefined, undefined, undefined, undefined, undefined, undefined);\n    const outputs = [complexOutput];\n\n    this.wpsService.execute( (response => {\n        console.log(response);\n        this.response = response;\n        this.sendMessage();\n      }), 'r.resample', 'document',\n      'async', false, inputs, outputs);\n  }\n\n  executeInlineShape62_Inline() {\n    this.wpsService = new WpsServiceTs('1.0.0', 'http://geoprocessing.demo.52north.org:8080/wps/WebProcessingService');\n\n    const complexInput = new ComplexDataInput('data',\n      'application/x-zipped-shp', undefined, 'base64', false,\n      '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');\n\n    const literalInput = new LiteralDataInput('width', undefined,\n      undefined, '0.05');\n    const inputs = [complexInput, literalInput];\n\n    const complexOutput = new ComplexDataOutput('result', 'application/x-zipped-shp',\n      undefined, 'base64', undefined, undefined, undefined, undefined, undefined, undefined );\n    const outputs = [complexOutput];\n\n    this.wpsService.execute( (response => {\n        console.log(response);\n        this.response = response;\n        this.sendMessage();\n      }), 'org.n52.wps.server.algorithm.SimpleBufferAlgorithm', 'document',\n      'sync', false, inputs, outputs);\n  }\n\n  executeExample_ManyInputs() {\n    this.wpsService = new WpsServiceTs('2.0.0', 'https://riesgos.52north.org/wps/WebProcessingService');\n\n    const inputBoundingBox = new BBoxDataInput('input-boundingbox', 'EPSG:4326', '2',\n      '-14.093957177836224 -260.2059521933809', '-14.00869637063467 -260.2059521933809');\n    const mmin = new LiteralDataInput('mmin', null, null, '6.6');\n    const mmax = new LiteralDataInput('mmax', null, null, '8.5');\n    const zmin = new LiteralDataInput('zmin', null, null, '5');\n    const zmax = new LiteralDataInput('zmax', null, null, '140');\n    const p = new LiteralDataInput('p', null, null, '0.1');\n    const etype = new LiteralDataInput('etype', null, null, 'deaggregation');\n    const tlon = new LiteralDataInput('tlon', null, null, '-71.5730623712764');\n    const tlat = new LiteralDataInput('tlat', null, null, '-33.1299174879672');\n    const inputs = [inputBoundingBox, mmin, mmax, zmin, zmax, p, etype, tlon, tlat];\n\n    const complexOutput = new ComplexDataOutput('selected-rows', 'application/vnd.geo+json',\n      undefined, 'UTF-8', undefined, undefined, undefined, undefined, undefined, 'value');\n    const outputs = [complexOutput];\n\n    this.wpsService.execute( (response => {\n        console.log(response);\n        this.response = response;\n        this.sendMessage();\n      }), 'org.n52.wps.python.algorithm.QuakeMLProcessBBox', 'document',\n      'sync', false, inputs, outputs);\n  }\n\n  executeExample_echoProcess() {\n    this.wpsService = new WpsServiceTs('1.0.0', 'http://geoprocessing.demo.52north.org:8080/wps/WebProcessingService');\n    const complexInput = new ComplexDataInput('complexInput', 'text/xml',\n      null, null, null,\n      'test');\n    const literalInput = new LiteralDataInput('literalInput', null,\n      null, '0.05');\n    const boundingBoxInput = new BBoxDataInput('boundingboxInput', 'EPSG:4326', '2',\n      '-14.093957177836224 -260.2059521933809', '-14.00869637063467 -260.2059521933809');\n    const inputs = [complexInput, literalInput];\n\n    const literalOutput = new LiteralDataOutput('literalOutput', 'text/xml', undefined, undefined,\n      undefined, undefined, undefined, undefined, 'test');\n    const bboxOutput =  new BBoxDataOutput('boundingboxOutput', undefined, undefined,\n      undefined, undefined, undefined, undefined, undefined);\n    const complexOutput = new ComplexDataOutput('complexOutput', undefined, undefined, undefined,\n      undefined, undefined, undefined, undefined, undefined, 'value');\n    const outputs = [ complexOutput, literalOutput];\n\n\n    this.wpsService.execute( (response => {\n        console.log(response);\n        this.response = response;\n        this.sendMessage();\n      }), 'org.n52.wps.server.algorithm.test.EchoProcess', 'document',\n      'sync', false, inputs, outputs);\n  }\n  sendMessage(){\n    this.messageEvent.emit(this.response);\n  }\n}\n","<h3>Execute Process</h3>\n\n\n<!--\n<form class=\"form-inline\">\n  <div class=\"form-group mb-2\">\n    <label>\n      <input type=\"text\" readonly class=\"form-control-plaintext\"  value=\"Execute V1 Sync\">\n    </label>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary mb-2\" (click)=\"executeV1Sync()\">Test</button>\n</form>\n-->\n\n\n<form class=\"form-inline\">\n  <div class=\"form-group mb-2\">\n    <label>\n      <input type=\"text\" readonly class=\"form-control-plaintext\"  value=\"Execute V2 Sync\">\n    </label>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary mb-2\" (click)=\"executeV2Sync()\">Test</button>\n</form>\n\n<form class=\"form-inline\">\n  <div class=\"form-group mb-2\">\n    <label>\n      <input type=\"text\" readonly class=\"form-control-plaintext\"  value=\"Execute V1 ASync\">\n    </label>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary mb-2\" (click)=\"executeV1Async()\">Test</button>\n</form>\n\n\n<form class=\"form-inline\">\n  <div class=\"form-group mb-2\">\n    <label>\n      <input type=\"text\" readonly class=\"form-control-plaintext\"  value=\"Simple Buffer Algorithm\">\n    </label>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary mb-2\" (click)=\"executeExample_SimpleBufferAlgorithm()\">Test</button>\n</form>\n\n<form class=\"form-inline\">\n  <div class=\"form-group mb-2\">\n    <label>\n      <input type=\"text\" readonly class=\"form-control-plaintext\"  value=\"Execute V2 Async\">\n    </label>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary mb-2\" (click)=\"executeV2Async()\">Test</button>\n</form>\n\n<form class=\"form-inline\">\n  <div class=\"form-group mb-2\">\n    <label>\n      <input type=\"text\" readonly class=\"form-control-plaintext\"  value=\"Tiff Raw Data Response\">\n    </label>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary mb-2\" (click)=\"executeExample_TiffImage()\">Test</button>\n</form>\n\n<form class=\"form-inline\">\n  <div class=\"form-group mb-2\">\n    <label>\n      <input type=\"text\" readonly class=\"form-control-plaintext\"  value=\"Execute Shape inline\">\n    </label>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary mb-2\" (click)=\"executeInlineShape62_Inline()\">Test</button>\n</form>\n\n<form class=\"form-inline\">\n  <div class=\"form-group mb-2\">\n    <label>\n      <input type=\"text\" readonly class=\"form-control-plaintext\"  value=\"Many Inputs\">\n    </label>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary mb-2\" (click)=\"executeExample_ManyInputs()\">Test</button>\n</form>\n\n<!--\n<form class=\"form-inline\">\n  <div class=\"form-group mb-2\">\n    <label>\n      <input type=\"text\" readonly class=\"form-control-plaintext\"  value=\"Echo Process\">\n    </label>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary mb-2\" (click)=\"executeExample_echoProcess()\">Test</button>\n</form>\n-->\n","import { Component, OnInit } from '@angular/core';\nimport {WpsServiceTs} from '../wps-service-ts';\nimport {CapabilitiesResponse} from '../core/model/capabilities/capabilities-response';\nimport {ProcessDescriptionResponse} from '../core/model/process.description/process-description-response';\nimport {WpsNgService} from 'wps-ng';\n\n@Component({\n  selector: 'app-wps-example',\n  templateUrl: './wps-example.component.html',\n  styleUrls: ['./wps-example.component.css']\n})\n\nexport class WpsExampleComponent implements OnInit {\n  private WPS_VERSION_1 = '1.0.0';\n  private WPS_VERSION_2 = '2.0.0';\n  private wpsServiceJS: any;\n  title: CapabilitiesResponse;\n  selectedURL = 'http://geoprocessing.demo.52north.org:8080/wps/WebProcessingService';\n  selectedVersion = '2.0.0';\n  urls: string[];\n  versions: string[];\n  capabilitiesResponse: CapabilitiesResponse;\n  selectedProcessIdentifier: string;\n  private wpsService: WpsServiceTs;\n  processDescriptionResponse: ProcessDescriptionResponse;\n  rightScreenTitle: string;\n  rightScreenJsonContent: string;\n  jobIdResult: string;\n  jobIdStatus: any;\n\n\n  ngOnInit(): void {\n    this.wpsService = new WpsServiceTs( this.selectedVersion, this.selectedURL);\n    this.urls = [\n      'http://geoprocessing.demo.52north.org:8080/wps/WebProcessingService',\n      'https://ows.terrestris.de/deegree-wps/services',\n      'http://zoo-project.org/cgi-bin/zoo_loader.cgi',\n      'https://maps.dwd.de/geoserver/ows'\n    ];\n    this.versions = ['1.0.0', '2.0.0'];\n    this.rightScreenTitle = 'Output appears here';\n  }\n\n\n  getCapabilitiesGET() {\n    this.wpsService = new WpsServiceTs(this.selectedVersion, this.selectedURL);\n    this.wpsService.getCapabilitiesGET( (e: CapabilitiesResponse) => {\n      console.log(e);\n      this.capabilitiesResponse = e;\n      this.updateRightScreenContents('Typescript Casted Capabilities Response', this.capabilitiesResponse);\n    });\n  }\n\n  getCapabilitiesPOST() {\n    this.wpsService = new WpsServiceTs(this.selectedVersion, this.selectedURL);\n    this.wpsService.getCapabilitiesPOST( (e: CapabilitiesResponse) => {\n      console.log(e);\n      this.capabilitiesResponse = e;\n      this.updateRightScreenContents('Typescript Casted Capabilities Response', this.capabilitiesResponse);\n    });\n  }\n\n  processDescriptionGet() {\n    this.wpsService.processDescriptionGet(this.selectedProcessIdentifier, (e: ProcessDescriptionResponse) => {\n      console.log(e);\n      this.processDescriptionResponse = e;\n      this.updateRightScreenContents('Typescript Casted Process Description Response', this.processDescriptionResponse);\n    });\n  }\n\n  processDescriptionPost(){\n    this.wpsService.processDescriptionPost(this.selectedProcessIdentifier, (e: ProcessDescriptionResponse) => {\n      console.log(e);\n      this.processDescriptionResponse = e;\n      this.updateRightScreenContents('Typescript Casted Process Description Response', this.processDescriptionResponse);\n    });\n  }\n\n\n  updateRightScreenContents(title: string, jsonContent: any) {\n    this.rightScreenTitle = title;\n    this.rightScreenJsonContent = jsonContent;\n  }\n\n  receiveMessage($event){\n    this.updateRightScreenContents('Execute Process', $event);\n  }\n\n  getStatus() {\n\n  }\n\n  getResult() {\n\n  }\n}\n","<body>\n<div class=\"split left\">\n  <nav>\n    <div class=\"nav nav-tabs\" id=\"nav-tab\" role=\"tablist\">\n      <a class=\"nav-item nav-link active\" id=\"nav-home-tab\" data-toggle=\"tab\" href=\"#nav-home\" role=\"tab\" aria-controls=\"nav-home\" aria-selected=\"true\">Capabilities</a>\n      <a class=\"nav-item nav-link\" id=\"nav-profile-tab\" data-toggle=\"tab\" href=\"#nav-profile\" role=\"tab\" aria-controls=\"nav-profile\" aria-selected=\"false\">Process Description</a>\n      <a class=\"nav-item nav-link\" id=\"nav-contact-tab\" data-toggle=\"tab\" href=\"#nav-contact\" role=\"tab\" aria-controls=\"nav-contact\" aria-selected=\"false\">Execute</a>\n      <a class=\"nav-item nav-link\" id=\"nav-4-tab\" data-toggle=\"tab\" href=\"#nav-4\" role=\"tab\" aria-controls=\"nav-4\" aria-selected=\"false\">Status & Result</a>\n    </div>\n  </nav>\n  <div class=\"tab-content\" id=\"nav-tabContent\">\n    <div class=\"tab-pane fade show active\" id=\"nav-home\" role=\"tabpanel\" aria-labelledby=\"nav-home-tab\">\n      <h3>Capabilities</h3>\n      <form wps-example-form=\"ngForm\">\n        <div class=\"form-group\">\n          <label for=\"version\">Version</label>\n          <select class=\"form-control\" [(ngModel)]=\"selectedVersion\" id=\"version\" name=\"version\" ngModel required>\n            <option *ngFor=\"let version of versions\" [value]=\"version\" selected=\"selected\">{{version}}</option>\n          </select>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"url\">URL</label>\n          <select class=\"form-control\" [(ngModel)]=\"selectedURL\" name=\"url\" id=\"url\" ngModel required>\n            <option *ngFor=\"let url of urls\" [value]=\"url\" >{{url}}</option>\n          </select>\n        </div>\n        <button (click)=\"getCapabilitiesGET()\" >Capabilities Get</button>\n        <button (click)=\"getCapabilitiesPOST()\">Capabilities Post</button>\n\n        <div *ngIf=\"capabilitiesResponse\">\n          <label for=\"capabilities\">Capabilities List:</label>\n          <select class=\"form-control\" [(ngModel)]=\"selectedProcessIdentifier\" name=\"capabilities\"  ngModel>\n            <option *ngFor=\"let capability of capabilitiesResponse.capabilities.processes\" [value]=\"capability.identifier\" >{{capability.title}}</option>\n          </select>\n        </div>\n\n      </form>\n    </div>\n    <div class=\"tab-pane fade\" id=\"nav-profile\" role=\"tabpanel\" aria-labelledby=\"nav-profile-tab\">\n      <form wps-example-form=\"ngForm\">\n        <div *ngIf=\"capabilitiesResponse\">\n          <h3>Process Description:</h3>\n\n          <label for=\"capabilities\">Capabilities List:</label>\n          <select class=\"form-control\" [(ngModel)]=\"selectedProcessIdentifier\" name=\"capabilities\" id=\"capabilities\"  ngModel>\n            <option *ngFor=\"let capability of capabilitiesResponse.capabilities.processes\" [value]=\"capability.identifier\" >{{capability.title}}</option>\n          </select>\n          <button (click)=\"processDescriptionGet()\">Process Details Get</button>\n          <button (click)=\"processDescriptionPost()\">Process Details Post</button>\n        </div>\n        <div *ngIf=\"!capabilitiesResponse\">\n          <h3>Process Description:</h3>\n          <h5>Fetch Capabilities to get the list of process available.</h5>\n        </div>\n      </form>\n    </div>\n    <div class=\"tab-pane fade\" id=\"nav-contact\" role=\"tabpanel\" aria-labelledby=\"nav-contact-tab\">\n      <app-execute-examples (messageEvent)=\"receiveMessage($event)\"></app-execute-examples>\n    </div>\n\n    <div class=\"tab-pane fade\" id=\"nav-4\" role=\"tabpanel\" aria-labelledby=\"nav-profile-tab\">\n      <div class=\"input-group mb-3\">\n        <input  [(ngModel)]=\"jobIdStatus\" type=\"text\" class=\"form-control\" placeholder=\"Job Id\" aria-label=\"Job Id\" aria-describedby=\"button-addon1\">\n        <div class=\"input-group-append\">\n          <button  (click)=\"getStatus()\" class=\"btn btn-outline-secondary\" type=\"button\" id=\"button-addon1\">Get Status</button>\n        </div>\n      </div>\n      <div class=\"input-group mb-3\">\n        <input [(ngModel)]=\"jobIdResult\" type=\"text\" class=\"form-control\" placeholder=\"Job Id\" aria-label=\"Job Id\" aria-describedby=\"button-addon2\">\n        <div class=\"input-group-append\">\n          <button (click)=\"getResult()\" class=\"btn btn-outline-secondary\" type=\"button\" id=\"button-addon2\">Get Result</button>\n        </div>\n      </div>\n    </div>\n\n  </div>\n</div>\n\n<div class=\"split right\">\n  <div class=\"jumbotron\" >\n    <h3>{{ rightScreenTitle }}</h3>\n    <pre>{{ rightScreenJsonContent | json }}</pre>\n  </div>\n</div>\n</body>\n","import {Settings} from './core/settings';\nimport {CapabilitiesResponse} from './core/model/capabilities/capabilities-response';\nimport {ProcessDescriptionResponse} from './core/model/process.description/process-description-response';\nimport {ExecuteResponse} from './core/model/execute.process/response/execute-response';\nimport {DataInput} from './core/model/execute.process/request/input/data-input';\nimport {DataOutput} from './core/model/execute.process/request/output/data-output';\n\nconst WPS_VERSION_1 = '1.0.0';\nconst WPS_VERSION_2 = '2.0.0';\ndeclare var WpsService: any;\n\nexport class WpsServiceTs {\n\n  constructor(private version: string , private url: string) {\n    // Url Check\n    if (!WpsServiceTs.isValidUrl(url)) {\n      throw new Error('Url ' + url + ' is not valid.');\n    }\n    // Version Check\n    this.version = (version === WPS_VERSION_2) ? WPS_VERSION_2 : WPS_VERSION_1;\n\n    const setting = new Settings(url, version);\n    this.wpsServiceJS = new WpsService(setting);\n  }\n\n  private wpsServiceJS: any;\n\n\n  /**\n   * Utility Function to check URL Validity\n   */\n  static isValidUrl(url: string) {\n    try {\n      // tslint:disable-next-line:no-unused-expression\n      new URL(url);\n    } catch (_) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * allowed values : \"1.0.0\" or \"2.0.0\"\n   *\n   * requires Constant.js\n   */\n  setVersion(version: string = WPS_VERSION_2){\n    this.version = (version === WPS_VERSION_2) ? WPS_VERSION_2 : WPS_VERSION_1;\n  }\n\n  /**\n   * allowed values : \"1.0.0\" or \"2.0.0\"\n   *\n   * requires Constant.js\n   */\n  setUrl(url: string){\n    if (!WpsServiceTs.isValidUrl(url)) {\n      throw new Error('Url ' + url + ' is not valid.');\n    }\n    this.url = url;\n  }\n\n  /**\n   * getCapabilities via HTTP GET\n   *\n   * @callbackFunction is triggered on success-event of JQuery.ajax method\n   */\n  getCapabilitiesGET(callback: (capabilitiesResponse: CapabilitiesResponse) => void) {\n    let capabilitiesResponse: CapabilitiesResponse;\n    this.wpsServiceJS.getCapabilities_GET((response: any) => {\n      capabilitiesResponse = new CapabilitiesResponse(response);\n      callback(capabilitiesResponse);\n    });\n  }\n\n  /**\n   * getCapabilities via HTTP Post\n   *\n   * @callbackFunction is triggered on success-event of JQuery.ajax method\n   */\n  getCapabilitiesPOST(callback: (capabilitiesResponse: CapabilitiesResponse) => void) {\n    let capabilitiesResponse: CapabilitiesResponse;\n    this.wpsServiceJS.getCapabilities_POST((response: any) => {\n      capabilitiesResponse = new CapabilitiesResponse(response);\n      callback(capabilitiesResponse);\n    });\n  }\n\n  /**\n   * process description via HTTP GET\n   *\n   * @callbackFunction is triggered on success-event of JQuery.ajax method.\n   *                   Takes the response object as argument\n   * @processIdentifier the identifier of the process\n   */\n  processDescriptionGet( processIdentifier: string , callback: (response: ProcessDescriptionResponse) => void) {\n    let processDescriptionResponse: ProcessDescriptionResponse;\n    this.wpsServiceJS.describeProcess_GET( (response: any) => {\n      processDescriptionResponse = new ProcessDescriptionResponse(response);\n      callback(processDescriptionResponse);\n    }, processIdentifier);\n  }\n\n  /**\n   * process description via HTTP POST\n   *\n   * @callbackFunction is triggered on success-event of JQuery.ajax method.\n   *                   Takes the response object as argument\n   * @processIdentifier the identifier of the process\n   */\n  processDescriptionPost( processIdentifier: string , callback: (response: ProcessDescriptionResponse) => void) {\n    let processDescriptionResponse: ProcessDescriptionResponse;\n    this.wpsServiceJS.describeProcess_POST( (response: any) => {\n      processDescriptionResponse = new ProcessDescriptionResponse(response);\n      callback(processDescriptionResponse);\n    }, processIdentifier);\n  }\n\n\n  /**\n   * WPS execute request via HTTP POST\n   *\n   * @callbackFunction is triggered on success-event of JQuery.ajax method.\n   *                   Takes the response object as argument\n   * @processIdentifier the identifier of the process\n   * @responseFormat either \"raw\" or \"document\", default is \"document\"\n   * @executionMode either \"sync\" or \"async\";\n   * @lineage only relevant for WPS 1.0; boolean, if \"true\" then returned\n   *          response will include original input and output definition\n   * @inputs an array of needed Input objects, use JS-object InputGenerator to\n   *         create inputs\n   * @outputs an array of requested Output objects, use JS-object\n   *          OutputGenerator to create inputs\n   */\n\n  execute(callback: (response: ExecuteResponse) => void , processIdentifier: string, responseFormat: string, executionMode: string,\n          lineage: boolean, inputs: Array<DataInput>, outputs: Array<DataOutput>) {\n    let executeResponse;\n    this.wpsServiceJS.execute( (response: any) => {\n      // Check for error\n      if (response.textStatus === 'error') {\n        throw new Error(response.errorThrown);\n      }\n      executeResponse = response;\n      callback(new ExecuteResponse(executeResponse));\n    }, processIdentifier, responseFormat, executionMode, lineage, inputs, outputs);\n  }\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}