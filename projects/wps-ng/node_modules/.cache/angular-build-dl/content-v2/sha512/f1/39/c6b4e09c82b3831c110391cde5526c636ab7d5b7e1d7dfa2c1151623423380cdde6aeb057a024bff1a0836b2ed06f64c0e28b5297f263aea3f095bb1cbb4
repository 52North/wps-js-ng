{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///dist/wps-ng/__ivy_ngcc__/fesm2015/wps-ng.js","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/core/model/capabilities/address.ts","webpack:///src/app/core/model/capabilities/capabilities-response.ts","webpack:///src/app/core/model/capabilities/capabilities.ts","webpack:///src/app/core/model/capabilities/contact-info.ts","webpack:///src/app/core/model/capabilities/dcp.ts","webpack:///src/app/core/model/capabilities/http.ts","webpack:///src/app/core/model/capabilities/operation.ts","webpack:///src/app/core/model/capabilities/process.ts","webpack:///src/app/core/model/capabilities/service-contact.ts","webpack:///src/app/core/model/capabilities/service-identification.ts","webpack:///src/app/core/model/capabilities/service-provider.ts","webpack:///src/app/core/model/execute.process/request/input/b-box-data-input.ts","webpack:///src/app/core/model/execute.process/request/input/complex-data-input.ts","webpack:///src/app/core/model/execute.process/request/input/literal-data-input.ts","webpack:///src/app/core/model/execute.process/request/output/b-box-data-output.ts","webpack:///src/app/core/model/execute.process/request/output/complex-data-output.ts","webpack:///src/app/core/model/execute.process/request/output/literal-data-output.ts","webpack:///src/app/core/model/execute.process/response/execute-output.ts","webpack:///src/app/core/model/execute.process/response/execute-response-data.ts","webpack:///src/app/core/model/execute.process/response/execute-response-document.ts","webpack:///src/app/core/model/execute.process/response/execute-response-object.ts","webpack:///src/app/core/model/execute.process/response/execute-response.ts","webpack:///src/app/core/model/execute.process/response/status.ts","webpack:///src/app/core/model/process.description/complex-data.ts","webpack:///src/app/core/model/process.description/data-type.ts","webpack:///src/app/core/model/process.description/format.ts","webpack:///src/app/core/model/process.description/input.ts","webpack:///src/app/core/model/process.description/literal-data-domains.ts","webpack:///src/app/core/model/process.description/literal-data.ts","webpack:///src/app/core/model/process.description/output.ts","webpack:///src/app/core/model/process.description/process-description-response.ts","webpack:///src/app/core/model/process.description/process-details.ts","webpack:///src/app/core/model/process.description/process-offering.ts","webpack:///src/app/core/settings.ts","webpack:///src/app/execute-examples/execute-examples.component.ts","webpack:///src/app/execute-examples/execute-examples.component.html","webpack:///src/app/wps-example/wps-example.component.ts","webpack:///src/app/wps-example/wps-example.component.html","webpack:///src/app/wps-service-ts.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","WpsNgService","ɵfac","WpsNgService_Factory","t","ɵprov","factory","token","providedIn","ctorParameters","type","args","WpsNgComponent","WpsNgComponent_Factory","ɵcmp","selectors","decls","vars","template","WpsNgComponent_Template","rf","ctx","encapsulation","selector","WpsNgModule","ɵmod","ɵinj","WpsNgModule_Factory","imports","ngJitMode","declarations","AppComponent","title","templateUrl","styleUrls","AppModule","providers","bootstrap","Address","addressJson","_deliveryPoint","deliveryPoint","_city","city","_administrativeArea","administrativeArea","_postalCode","postalCode","_country","country","_electronicMailAddress","electronicMailAddress","CapabilitiesResponse","capabilitiesResponseJson","_responseDocument","responseDocument","_capabilities","capabilities","Capabilities","capabilitiesJson","_service","service","_version","version","_serviceIdentification","serviceIdentification","_serviceProvider","serviceProvider","_operations","Array","operations","forEach","push","_languages","languages","_processes","processes","ContactInfo","contactInfoJson","_address","address","DCP","DCPJson","_HTTP","HTTP","HTTPJson","_name","name","_get","get","_post","post","Operation","operationJson","_DCP","Process","processJson","_title","_identifier","identifier","_processVersion","processVersion","_jobControlOptions","jobControlOptions","_outputTransmission","outputTransmission","ServiceContact","serviceContactJson","_individualName","individualName","_contactInfo","contactInfo","ServiceIdentification","serviceIdentificationJson","_abstractValue","abstractValue","_keywords","keywords","_serviceType","serviceType","_serviceTypeVersions","serviceTypeVersions","_fees","fees","_accessConstraints","accessConstraints","ServiceProvider","serviceProviderJson","_providerName","providerName","_serviceContact","serviceContact","BBoxDataInput","crs","dimension","lowerCorner","upperCorner","undefined","ComplexDataInput","mimeType","schema","encoding","asReference","complexPayload","LiteralDataInput","dataType","uom","value","BBoxDataOutput","dimensions","_type","_mimeType","_schema","_encoding","_crs","_dimensions","_lowerCorner","_upperCorner","ComplexDataOutput","transmission","LiteralDataOutput","_asReference","_dataType","_uom","_value","ExecuteOutput","executeOutput","_data","data","ExecuteResponseData","complexData","literalData","boundingBoxData","ExecuteResponseDocument","executeResponseDocumentJson","_statusLocation","statusLocation","_serviceInstance","serviceInstance","_process","process","_status","status","_outputs","outputs","_jobId","jobId","_expirationDate","expirationDate","ExecuteResponseObject","executeResponseJson","_serviceVersion","serviceVersion","ExecuteResponse","_resultDocument","_executeResponse","executeResponse","Status","statusJson","_creationTime","creationTime","_info","info","ComplexData","complexDataResponse","_formats","formats","DataType","_reference","reference","Format","formatResponse","Input","inputResponse","_minOccurs","minOccurs","_maxOccurs","maxOccurs","_literalData","LiteralDataDomains","literalDataDomainsJS","_anyValue","anyValue","_defaultValue","defaultValue","_unitOfMeasure","unitOfMeasure","LiteralData","literalDataResponse","_literalDataDomains","literalDataDomains","Output","outputResponse","_complexData","ProcessDescriptionResponse","processDescriptionResponse","_processOffering","processOffering","ProcessDetails","processResponse","_inputs","inputs","ProcessOffering","processOfferingResponse","_outputTransmissionModes","outputTransmissionModes","Settings","url","ExecuteExamplesComponent","messageEvent","selectedURL","selectedVersion","wpsService","urls","versions","rightScreenTitle","complexInput","literalInput","dataInputList","complexDataOutput","dataOutputList","execute","response","console","log","sendMessage","error","complexOutput","inputBoundingBox","mmin","mmax","zmin","zmax","p","etype","tlon","tlat","boundingBoxInput","literalOutput","bboxOutput","emit","executeV2Sync","executeV1Async","executeExample_SimpleBufferAlgorithm","executeV2Async","executeExample_TiffImage","executeInlineShape62_Inline","executeExample_ManyInputs","WpsExampleComponent","WPS_VERSION_1","WPS_VERSION_2","getCapabilitiesGET","capabilitiesResponse","updateRightScreenContents","getCapabilitiesPOST","processDescriptionGet","selectedProcessIdentifier","processDescriptionPost","jsonContent","rightScreenJsonContent","$event","receiveMessage","getStatus","getResult","WpsServiceTs","isValidUrl","setting","wpsServiceJS","WpsService","callback","getCapabilities_GET","getCapabilities_POST","processIdentifier","describeProcess_GET","describeProcess_POST","responseFormat","executionMode","lineage","textStatus","errorThrown","URL","_","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { ɵɵdefineInjectable, Injectable, Component, NgModule } from '@angular/core';\n\nimport * as ɵngcc0 from '@angular/core';\nclass WpsNgService {\n    constructor() { }\n}\nWpsNgService.ɵfac = function WpsNgService_Factory(t) { return new (t || WpsNgService)(); };\nWpsNgService.ɵprov = ɵɵdefineInjectable({ factory: function WpsNgService_Factory() { return new WpsNgService(); }, token: WpsNgService, providedIn: \"root\" });\nWpsNgService.ctorParameters = () => [];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(WpsNgService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return []; }, null); })();\n\nclass WpsNgComponent {\n    constructor() { }\n    ngOnInit() {\n    }\n}\nWpsNgComponent.ɵfac = function WpsNgComponent_Factory(t) { return new (t || WpsNgComponent)(); };\nWpsNgComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: WpsNgComponent, selectors: [[\"lib-wps-ng\"]], decls: 2, vars: 0, template: function WpsNgComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"p\");\n        ɵngcc0.ɵɵtext(1, \" wps-ng works! \");\n        ɵngcc0.ɵɵelementEnd();\n    } }, encapsulation: 2 });\nWpsNgComponent.ctorParameters = () => [];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(WpsNgComponent, [{\n        type: Component,\n        args: [{\n                selector: 'lib-wps-ng',\n                template: `\n    <p>\n      wps-ng works!\n    </p>\n  `\n            }]\n    }], function () { return []; }, null); })();\n\nclass WpsNgModule {\n}\nWpsNgModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: WpsNgModule });\nWpsNgModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function WpsNgModule_Factory(t) { return new (t || WpsNgModule)(); }, imports: [[]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(WpsNgModule, { declarations: [WpsNgComponent], exports: [WpsNgComponent] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(WpsNgModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [WpsNgComponent],\n                imports: [],\n                exports: [WpsNgComponent]\n            }]\n    }], null, null); })();\n\n/*\n * Public API Surface of wps-ng\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { WpsNgComponent, WpsNgModule, WpsNgService };\n\n//# sourceMappingURL=wps-ng.js.map","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'wps-js-ng';\n}\n","<app-wps-example></app-wps-example>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { WpsExampleComponent } from './wps-example/wps-example.component';\nimport {FormsModule} from '@angular/forms';\nimport { ExecuteExamplesComponent } from './execute-examples/execute-examples.component';\nimport {WpsNgModule} from 'wps-ng';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WpsExampleComponent,\n    ExecuteExamplesComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    WpsNgModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class Address {\n\n  private readonly _deliveryPoint: string;\n  private readonly _city: string;\n  private readonly _administrativeArea: string;\n  private readonly _postalCode: string;\n  private readonly _country: string;\n  private readonly _electronicMailAddress: string;\n\n  constructor(addressJson: any) {\n    this._deliveryPoint = addressJson.deliveryPoint;\n    this._city = addressJson.city;\n    this._administrativeArea = addressJson.administrativeArea;\n    this._postalCode = addressJson.postalCode;\n    this._country = addressJson.country;\n    this._electronicMailAddress = addressJson.electronicMailAddress;\n  }\n\n  get deliveryPoint(): string {\n    return this._deliveryPoint;\n  }\n\n  get city(): string {\n    return this._city;\n  }\n\n  get administrativeArea(): string {\n    return this._administrativeArea;\n  }\n\n  get postalCode(): string {\n    return this._postalCode;\n  }\n\n  get country(): string {\n    return this._country;\n  }\n\n  get electronicMailAddress(): string {\n    return this._electronicMailAddress;\n  }\n}\n","import {Capabilities} from './capabilities';\n\nexport class CapabilitiesResponse {\n  private readonly _responseDocument: Document;\n  private readonly _capabilities: Capabilities;\n\n  constructor(capabilitiesResponseJson: any) {\n    this._responseDocument = capabilitiesResponseJson.responseDocument;\n    this._capabilities = new Capabilities(capabilitiesResponseJson.capabilities);\n  }\n\n\n  get responseDocument(): Document {\n    return this._responseDocument;\n  }\n\n  get capabilities(): Capabilities {\n    return this._capabilities;\n  }\n}\n","import {ServiceIdentification} from './service-identification';\nimport {ServiceProvider} from './service-provider';\nimport {Operation} from './operation';\nimport {Process} from './process';\n\nexport class Capabilities {\n\n  private readonly _service: string;\n  private readonly _version: string;\n  private readonly _serviceIdentification: ServiceIdentification;\n  private readonly _serviceProvider: ServiceProvider;\n  private readonly _operations: Operation[];\n  private readonly _languages: string[];\n  private readonly _processes: Process[];\n\n  constructor(capabilitiesJson: any) {\n    if (capabilitiesJson != null) {\n      this._service = capabilitiesJson.service;\n      this._version = capabilitiesJson.version;\n      this._serviceIdentification = new ServiceIdentification(capabilitiesJson.serviceIdentification);\n      this._serviceProvider = new ServiceProvider(capabilitiesJson.serviceProvider);\n      this._operations = new Array<Operation>();\n      capabilitiesJson.operations?.forEach(e => {\n        this._operations.push(new Operation(e));\n      });\n      this._languages = new Array<string>();\n      capabilitiesJson.languages?.forEach(e => {\n        this._languages.push(e);\n      });\n\n      this._processes = new Array<Process>();\n      capabilitiesJson.processes?.forEach(e => {\n        this._processes.push(new Process(e));\n      });\n      this._processes = capabilitiesJson.processes;\n    }\n  }\n\n  get service(): string {\n    return this._service;\n  }\n\n  get version(): string {\n    return this._version;\n  }\n\n  get serviceIdentification(): ServiceIdentification {\n    return this._serviceIdentification;\n  }\n\n  get serviceProvider(): ServiceProvider {\n    return this._serviceProvider;\n  }\n\n  get operations(): Operation[] {\n    return this._operations;\n  }\n\n  get languages(): string[] {\n    return this._languages;\n  }\n\n  get processes(): Process[] {\n    return this._processes;\n  }\n}\n","import {Address} from './address';\n\nexport class ContactInfo {\n\n  private readonly _address: Address;\n\n  constructor(contactInfoJson: any) {\n    if (contactInfoJson != null) {\n      this._address = new Address(contactInfoJson.address);\n    }\n  }\n\n  get address(): Address {\n    return this._address;\n  }\n}\n","import {HTTP} from './http';\nexport class DCP {\n\n  private readonly _HTTP: HTTP;\n\n  constructor(DCPJson: any) {\n    if (DCPJson != null) {\n      this._HTTP = new HTTP(DCPJson.HTTP);\n    }\n  }\n\n  get HTTP(): HTTP {\n    return this._HTTP;\n  }\n}\n","export class HTTP {\n\n  private readonly _name: string;\n  private readonly _get: string;\n  private readonly _post: string;\n\n  constructor(HTTPJson: any) {\n    if (HTTPJson != null)\n    {\n      this._name = HTTPJson.name;\n      this._get = HTTPJson.get;\n      this._post = HTTPJson.post;\n    }\n  }\n\n  get name(): string {\n    return this._name;\n  }\n\n  get get(): string {\n    return this._get;\n  }\n\n  get post(): string {\n    return this._post;\n  }\n}\n","import {DCP} from './dcp';\n\nexport class Operation {\n  private readonly _DCP: DCP;\n\n  constructor(operationJson: any) {\n    if (operationJson != null){\n      this._DCP = new DCP(operationJson.DCP);\n    }\n  }\n\n  get DCP(): DCP {\n    return this._DCP;\n  }\n}\n","export class Process {\n  private readonly _title: string;\n  private readonly _identifier: string;\n  private readonly _processVersion: string;\n  private readonly _jobControlOptions: string;\n  private readonly _outputTransmission: string;\n\n  constructor(processJson: any) {\n    if (processJson != null){\n      this._title = processJson.title;\n      this._identifier = processJson.identifier;\n      this._processVersion = processJson.processVersion;\n      this._jobControlOptions = processJson.jobControlOptions;\n      this._outputTransmission = processJson.outputTransmission;\n    }\n  }\n\n  get title(): string {\n    return this._title;\n  }\n\n  get identifier(): string {\n    return this._identifier;\n  }\n\n  get processVersion(): string {\n    return this._processVersion;\n  }\n\n  get jobControlOptions(): string {\n    return this._jobControlOptions;\n  }\n\n  get outputTransmission(): string {\n    return this._outputTransmission;\n  }\n}\n","import {ContactInfo} from './contact-info';\n\nexport class ServiceContact {\n\n  private readonly _individualName: string;\n  private readonly _contactInfo: ContactInfo;\n\n  get individualName(): string {\n    return this._individualName;\n  }\n\n  get contactInfo(): ContactInfo {\n    return this._contactInfo;\n  }\n  constructor(serviceContactJson: any) {\n    if (serviceContactJson != null){\n      this._individualName = serviceContactJson.individualName;\n      this._contactInfo = new ContactInfo(serviceContactJson.contactInfo);\n    }\n\n\n  }\n}\n","export class ServiceIdentification {\n\n  private readonly _title: string;\n  private readonly _abstractValue: string;\n  private readonly _keywords: string[];\n  private readonly _serviceType: string;\n  private readonly _serviceTypeVersions: string[];\n  private readonly _fees: string;\n  private readonly _accessConstraints: string;\n\n  constructor(serviceIdentificationJson: any) {\n    if (serviceIdentificationJson != null){\n      this._title = serviceIdentificationJson.title;\n      this._abstractValue = serviceIdentificationJson.abstractValue;\n      this._keywords = new Array<string>();\n      serviceIdentificationJson.keywords?.forEach( (e: string) => {\n        this._keywords.push(e);\n      });\n      this._serviceType = serviceIdentificationJson.serviceType;\n      this._serviceTypeVersions = new Array<string>();\n      serviceIdentificationJson.serviceTypeVersions?.forEach( (e: string) => {\n        this._serviceTypeVersions.push(e);\n      });\n      this._fees =  serviceIdentificationJson.fees;\n      this._accessConstraints = serviceIdentificationJson.accessConstraints;\n    }\n  }\n\n  get title(): string {\n    return this._title;\n  }\n\n  get abstractValue(): string {\n    return this._abstractValue;\n  }\n\n  get keywords(): string[] {\n    return this._keywords;\n  }\n\n  get serviceType(): string {\n    return this._serviceType;\n  }\n\n  get serviceTypeVersions(): string[] {\n    return this._serviceTypeVersions;\n  }\n\n  get fees(): string {\n    return this._fees;\n  }\n\n  get accessConstraints(): string {\n    return this._accessConstraints;\n  }\n}\n","import {ServiceContact} from './service-contact';\n\nexport class ServiceProvider {\n\n  private readonly _providerName: string;\n  private readonly _serviceContact: ServiceContact;\n\n  constructor(serviceProviderJson: any) {\n    if (serviceProviderJson != null){\n      this._providerName = serviceProviderJson.providerName;\n      this._serviceContact = new ServiceContact(serviceProviderJson.serviceContact);\n    }\n\n  }\n\n  get providerName(): string {\n    return this._providerName;\n  }\n\n  get serviceContact(): ServiceContact {\n    return this._serviceContact;\n  }\n\n}\n","import {DataInput} from './data-input';\n\nexport class BBoxDataInput implements DataInput{\n   identifier: string;\n   type: string;\n   crs: string;\n   dimension: string;\n   lowerCorner: string;\n   upperCorner: string;\n\n  /**\n   * the following parameters are mandatory: identifier, crs,\n   * lowerCorner and upperCorner\n   *\n   * the rest might be set to 'undefined'!\n   *\n   * @identifier input-request identifier\n   * @crs coordinate reference system URI\n   * @dimension number of dimensions in this CRS\n   * @lowerCorner orderedSequence of double values\n   * @upperCorner orderedSequence of double values\n   */\n\n  constructor( identifier: string, crs: string, dimension: string, lowerCorner: string, upperCorner: string) {\n    this.type = 'bbox';\n    this.identifier = identifier;\n    this.crs = crs;\n    this.dimension = dimension || undefined;\n    this.lowerCorner = lowerCorner;\n    this.upperCorner = upperCorner;\n  }\n}\n","import {DataInput} from './data-input';\n\nexport class ComplexDataInput implements DataInput{\n  type: string;\n  identifier: string;\n  mimeType: string;\n  schema: string;\n  encoding: string;\n  asReference: boolean;\n  complexPayload: any;\n\n  /**\n   * the following parameters are mandatory: identifier and\n   * complexPayload\n   *\n   * the rest might be set to 'undefined'!\n   *\n   * @identifier input-request identifier\n   * @mimeType MIME type of the input-request; may be 'undefined'\n   * @schema reference to a schema; may be 'undefined'\n   * @encoding encoding; may be 'undefined'\n   * @complexPayload the complex payload (XML tags) as String\n   * @asReference boolean, either \"true\" or \"false\", indicating\n   *              whether parameter body contains a URL as reference\n   *              to an external body or the actual POST body\n   */\n\n\n  constructor(identifier: string, mimeType: string,\n              schema: string, encoding: string,\n              asReference: boolean = false, complexPayload: any) {\n    this.type = 'complex';\n    this.identifier = identifier;\n    this.mimeType = mimeType;\n    this.schema = schema;\n    this.encoding = encoding;\n    this.asReference = asReference;\n    this.complexPayload = complexPayload;\n  }\n}\n","import {DataInput} from './data-input';\n\nexport class LiteralDataInput implements DataInput{\n  type: string;\n  identifier: string;\n  dataType: string;\n  uom: string;\n  value: string;\n\n  /**\n   * the following parameters are mandatory: identifier and value\n   *\n   * the rest might be set to 'undefined'!\n   *\n   * @identifier input-request identifier\n   * @dataType data type of the input-request; may be 'undefined'\n   * @uom unit of measure; may be 'undefined'\n   * @value the literal value of the input-request\n   */\n  constructor(identifier: string, dataType: string, uom: string, value: string) {\n    this.type = 'literal';\n    this.identifier = identifier;\n    this.dataType = dataType;\n    this.uom = uom;\n    this.value = value;\n  }\n\n}\n","import {DataOutput} from './data-output';\n\nexport class BBoxDataOutput implements DataOutput{\n  readonly _type: string;\n  readonly _identifier: string;\n  readonly _mimeType: string;\n  readonly _schema: string;\n  readonly _encoding: string;\n  readonly _crs: string;\n  readonly _dimensions: string;\n  readonly _lowerCorner: string;\n  readonly _upperCorner: string;\n\n\n  constructor(identifier: string, mimeType: string, schema: string, encoding: string, crs: string,\n              dimensions: string, lowerCorner: string, upperCorner: string) {\n    this._type = 'bbox';\n    this._identifier = identifier;\n    this._mimeType = mimeType;\n    this._schema = schema;\n    this._encoding = encoding;\n    this._crs = crs;\n    this._dimensions = dimensions;\n    this._lowerCorner = lowerCorner;\n    this._upperCorner = upperCorner;\n  }\n\n  get identifier(): string {\n    return this._identifier;\n  }\n\n  get type(): string {\n    return this._type;\n  }\n\n  get crs(): string {\n    return this._crs;\n  }\n\n  get dimensions(): string {\n    return this._dimensions;\n  }\n\n  get lowerCorner(): string {\n    return this._lowerCorner;\n  }\n\n  get upperCorner(): string {\n    return this._upperCorner;\n  }\n}\n","import {DataOutput} from './data-output';\n\nexport class ComplexDataOutput implements  DataOutput {\n  type: string;\n  identifier: string;\n  mimeType: string;\n  schema: string;\n  encoding: string;\n  uom: string;\n  asReference: boolean;\n  title: string;\n  abstractValue: any;\n  value: any;\n  transmission: string;\n\n  /**\n   * the following parameters are mandatory: identifier\n   *\n   * the rest might be set to 'undefined'!\n   *\n   * @identifier output-request identifier\n   * @mimeType MIME type of the input; may be 'undefined'\n   * @schema reference to a schema; may be 'undefined'\n   * @encoding encoding; may be 'undefined'\n   * @uom unit of measure; may be 'undefined'\n   * @asReference boolean, \"true\" or \"false\"\n   * @title new title\n   * @abstractValue new description as text of the 'Abstract' element\n   *          of the response document\n   */\n\n\n  constructor(identifier: string, mimeType: string, schema: string, encoding: string,\n              uom: string, asReference: boolean = false, title: string, abstractValue: any, value?: any, transmission?: string) {\n    this.type = 'complex';\n    this.identifier = identifier;\n    this.mimeType = mimeType;\n    this.schema = schema;\n    this.encoding = encoding;\n    this.uom = uom;\n    this.asReference = asReference;\n    this.title = title;\n    this.abstractValue = abstractValue;\n    this.value = value;\n    this.transmission = transmission;\n  }\n}\n","import {DataOutput} from './data-output';\n\nexport class LiteralDataOutput implements DataOutput{\n  readonly _type: string;\n  readonly _identifier: string;\n  readonly _mimeType: string;\n  readonly _schema: string;\n  readonly _encoding: string;\n  readonly _asReference: boolean;\n  readonly _abstractValue: any;\n  readonly _dataType: string;\n  readonly _uom: string;\n  readonly _value: any;\n\n\n  constructor(identifier: string, mimeType: string, schema: string, encoding: string, asReference: boolean = false,\n              abstractValue: any, dataType: string, uom: string, value: string) {\n    this._type = 'literal';\n    this._identifier = identifier;\n    this._mimeType = mimeType;\n    this._schema = schema;\n    this._encoding = encoding;\n    this._asReference = asReference;\n    this._abstractValue = abstractValue;\n    this._dataType = dataType;\n    this._uom = uom;\n    this._value = value;\n  }\n\n  get type(): string {\n    return this._type;\n  }\n\n  get identifier(): string {\n    return this._identifier;\n  }\n\n  get asReference(): boolean {\n    return this._asReference;\n  }\n\n  get abstractValue(): any {\n    return this._abstractValue;\n  }\n\n  get dataType(): string {\n    return this._dataType;\n  }\n\n  get uom(): string {\n    return this._uom;\n  }\n\n  get value(): any {\n    return this._value;\n  }\n}\n","import {ExecuteResponseData} from './execute-response-data';\n\nexport class ExecuteOutput {\n  private readonly _identifier: string;\n  private readonly _title: string;\n  private readonly _abstractValue: any;\n  private readonly _data: ExecuteResponseData;\n\n  constructor(executeOutput: any) {\n    this._identifier = executeOutput.identifier;\n    this._title = executeOutput.title;\n    this._abstractValue = executeOutput.abstractValue;\n    this._data = new ExecuteResponseData(executeOutput.data);\n  }\n\n  get identifier(): string {\n    return this._identifier;\n  }\n\n  get title(): string {\n    return this._title;\n  }\n\n  get data(): ExecuteResponseData {\n    return this._data;\n  }\n\n  get abstractValue(): any {\n    return this._abstractValue;\n  }\n}\n","import {ComplexDataOutput} from '../request/output/complex-data-output';\nimport {DataOutput} from '../request/output/data-output';\nimport {BBoxDataOutput} from '../request/output/b-box-data-output';\nimport {LiteralDataOutput} from '../request/output/literal-data-output';\n\nexport class ExecuteResponseData {\n  private readonly _data: DataOutput;\n\n  constructor(data: any) {\n    if ( data != null && data.complexData != null){\n      this._data = new ComplexDataOutput(\n        data.complexData.identifier,\n        data.complexData.mimeType,\n        data.complexData.schema,\n        data.complexData.encoding,\n        data.complexData.uom,\n        data.complexData.asReference,\n        data.complexData.title,\n        data.complexData.abstractValue,\n        data.complexData.value);\n    }\n    if ( data != null && data.literalData != null) {\n      this._data = new LiteralDataOutput(\n        data.literalData.identifier,\n        data.literalData.mimeType,\n        data.literalData.schema,\n        data.literalData.encoding,\n        data.literalData.asReference,\n        data.literalData.abstractValue,\n        data.literalData.dataType,\n        data.literalData.uom,\n        data.literalData.value);\n    }\n\n    if ( data != null && data.boundingBoxData != null) {\n      this._data = new BBoxDataOutput(\n        data.boundingBoxData.identifier,\n        data.boundingBoxData.mimeType,\n        data.boundingBoxData.schema,\n        data.boundingBoxData.encoding,\n        data.boundingBoxData.crs,\n        data.boundingBoxData.dimensions,\n        data.boundingBoxData.lowerCorner,\n        data.boundingBoxData.upperCorner);\n    }\n  }\n\n  get data(): DataOutput {\n    return this._data;\n  }\n}\n","import {Process} from '../../capabilities/process';\nimport {ExecuteOutput} from './execute-output';\nimport {Status} from './status';\n\nexport class ExecuteResponseDocument {\n  // Property only for Version 2\n  private readonly _jobId: string;\n  // Property only for Async call\n  private readonly _statusLocation: string;\n  private readonly _expirationDate: string;\n\n  private readonly _service: string;\n  private readonly _version: string;\n  private readonly _serviceInstance: string;\n  private readonly _process: Process;\n  private readonly _status: Status;\n  private readonly _outputs: ExecuteOutput[];\n\n  constructor(executeResponseDocumentJson: any) {\n    if (executeResponseDocumentJson != null){\n      this._service = executeResponseDocumentJson.service;\n      this._version = executeResponseDocumentJson.version;\n      this._statusLocation = executeResponseDocumentJson.statusLocation;\n      this._serviceInstance = executeResponseDocumentJson.serviceInstance;\n      this._process = new Process(executeResponseDocumentJson.process);\n      this._status = new Status(executeResponseDocumentJson.status);\n      this._outputs = new Array<ExecuteOutput>();\n      executeResponseDocumentJson.outputs?.forEach(e => {\n        this._outputs.push(new ExecuteOutput(e));\n      });\n      this._jobId = executeResponseDocumentJson.jobId;\n      this._expirationDate = executeResponseDocumentJson.expirationDate;\n    }\n  }\n\n  get service(): string {\n    return this._service;\n  }\n\n  get version(): string {\n    return this._version;\n  }\n\n  get statusLocation(): string {\n    return this._statusLocation;\n  }\n\n  get serviceInstance(): string {\n    return this._serviceInstance;\n  }\n\n  get process(): Process {\n    return this._process;\n  }\n\n  get status(): Status {\n    return this._status;\n  }\n\n  get outputs(): ExecuteOutput[] {\n    return this._outputs;\n  }\n\n  get jobId(): string {\n    return this._jobId;\n  }\n}\n","import {ExecuteResponseDocument} from './execute-response-document';\n\nexport class ExecuteResponseObject {\n  private readonly _type: string;\n  private readonly _serviceVersion: string;\n  private readonly _responseDocument: ExecuteResponseDocument;\n\n  constructor(executeResponseJson: any) {\n    // type: string, serviceVersion: string, responseDocument: ExecuteResponseDocument\n    this._type = executeResponseJson.type;\n    this._serviceVersion = executeResponseJson.serviceVersion;\n    this._responseDocument = new ExecuteResponseDocument(executeResponseJson.responseDocument);\n  }\n\n  get type(): string {\n    return this._type;\n  }\n\n  get serviceVersion(): string {\n    return this._serviceVersion;\n  }\n\n  get responseDocument(): ExecuteResponseDocument {\n    return this._responseDocument;\n  }\n}\n","import {ExecuteResponseObject} from './execute-response-object';\n\nexport class ExecuteResponse {\n  private readonly _resultDocument: Document;\n  private readonly _executeResponse: ExecuteResponseObject;\n\n  constructor(executeResponseJson: any) {\n    if (executeResponseJson != null) {\n      this._resultDocument = executeResponseJson.responseDocument;\n      this._executeResponse = new ExecuteResponseObject(executeResponseJson.executeResponse);\n    }\n  }\n\n  get resultDocument(): Document {\n    return this._resultDocument;\n  }\n\n  get executeResponse(): ExecuteResponseObject {\n    return this._executeResponse;\n  }\n}\n","\nexport class Status {\n  private readonly _creationTime: Date;\n  private readonly _info: string;\n\n  constructor(statusJson: any) {\n    if (statusJson != null){\n      this._creationTime = statusJson.creationTime;\n      this._info = statusJson.info;\n    }\n  }\n\n  get creationTime(): Date {\n    return this._creationTime;\n  }\n\n  get info(): string {\n    return this._info;\n  }\n}\n","import {Format} from './format';\n\nexport class ComplexData {\n  private readonly _formats: Format[];\n\n  constructor(complexDataResponse: any) {\n    if (complexDataResponse != null){\n      this._formats = new Array<Format>();\n      complexDataResponse.formats?.forEach( e => {\n        this._formats.push(new Format(e));\n      });\n    }\n  }\n\n  get formats(): Format[] {\n    return this._formats;\n  }\n}\n\n","export class DataType {\n  private readonly _type: string;\n  private readonly _reference: string;\n\n  constructor(dataType: any) {\n    this._type = dataType.type;\n    this._reference = dataType.reference;\n  }\n\n  get type(): string {\n    return this._type;\n  }\n\n  get reference(): string {\n    return this._reference;\n  }\n}\n","export class Format {\n  private readonly _mimeType: string;\n  private readonly _encoding: string;\n  private readonly _schema: string;\n\n  constructor(formatResponse: any) {\n    if ( formatResponse != null){\n      this._mimeType = formatResponse.mimeType;\n      this._encoding = formatResponse.encoding;\n      this._schema = formatResponse.schema;\n    }\n  }\n\n  get mimeType(): string {\n    return this._mimeType;\n  }\n\n  get encoding(): string {\n    return this._encoding;\n  }\n\n  get schema(): string {\n    return this._schema;\n  }\n}\n","import {LiteralData} from './literal-data';\n\nexport class Input {\n  private readonly _title: string;\n  private readonly _abstractValue: string;\n  private readonly _identifier: string;\n  private readonly _minOccurs: string;\n  private readonly _maxOccurs: string;\n  private readonly _literalData: LiteralData;\n\n  constructor(inputResponse: any) {\n    if (inputResponse != null){\n      this._title = inputResponse.title;\n      this._abstractValue = inputResponse.abstractValue;\n      this._identifier = inputResponse.identifier;\n      this._minOccurs = inputResponse.minOccurs;\n      this._maxOccurs = inputResponse.maxOccurs;\n      this._literalData =  new LiteralData(inputResponse.literalData);\n    }\n  }\n\n  get title(): string {\n    return this._title;\n  }\n\n  get abstractValue(): string {\n    return this._abstractValue;\n  }\n\n  get identifier(): string {\n    return this._identifier;\n  }\n\n  get minOccurs(): string {\n    return this._minOccurs;\n  }\n\n  get maxOccurs(): string {\n    return this._maxOccurs;\n  }\n\n  get literalData(): LiteralData {\n    return this._literalData;\n  }\n}\n","import { DataType } from 'src/app/core/model/process.description/data-type';\n\nexport class LiteralDataDomains {\n  private readonly _anyValue: boolean;\n  private readonly _dataType: DataType;\n  private readonly _defaultValue: string;\n  private readonly _unitOfMeasure: string;\n\n\n  constructor(literalDataDomainsJS: any) {\n    this._anyValue = literalDataDomainsJS.anyValue;\n    this._dataType = new DataType(literalDataDomainsJS.dataType);\n    this._defaultValue = literalDataDomainsJS.defaultValue;\n    this._unitOfMeasure = literalDataDomainsJS.unitOfMeasure;\n  }\n\n  get anyValue(): boolean {\n    return this._anyValue;\n  }\n\n  get dataType(): DataType {\n    return this._dataType;\n  }\n\n  get defaultValue(): string {\n    return this._defaultValue;\n  }\n\n  get unitOfMeasure(): string {\n    return this._unitOfMeasure;\n  }\n}\n","import { LiteralDataDomains } from 'src/app/core/model/process.description/literal-data-domains';\nimport {Format} from './format';\n\nexport class LiteralData {\n  private readonly _literalDataDomains: LiteralDataDomains[];\n  private readonly _formats: Format[];\n\n  constructor(literalDataResponse: any) {\n    if (literalDataResponse != null){\n      this._formats = new Array<Format>();\n      literalDataResponse.formats?.forEach( e => {\n        this._formats.push(new Format(e));\n      });\n      this._literalDataDomains = new Array<LiteralDataDomains>();\n      literalDataResponse.literalDataDomains?.forEach( e => {\n        this._literalDataDomains.push(new LiteralDataDomains(e));\n      });\n    }\n\n  }\n  get literalDataDomains(): LiteralDataDomains[] {\n    return this._literalDataDomains;\n  }\n\n  get formats(): Format[] {\n    return this._formats;\n  }\n}\n","import { ComplexData } from './complex-data';\n\nexport class Output {\n  private readonly _title: string;\n  private readonly _abstractValue: string;\n  private readonly _identifier: string;\n  private readonly _complexData: ComplexData;\n\n  constructor(outputResponse: any) {\n    if (outputResponse != null){\n      this._title = outputResponse.title;\n      this._abstractValue = outputResponse.abstractValue;\n      this._identifier = outputResponse.identifier;\n      this._complexData = new ComplexData(outputResponse.complexData);\n    }\n  }\n\n  get title(): string {\n    return this._title;\n  }\n\n  get abstractValue(): string {\n    return this._abstractValue;\n  }\n\n  get identifier(): string {\n    return this._identifier;\n  }\n\n  get complexData(): ComplexData {\n    return this._complexData;\n  }\n}\n","import { ProcessOffering } from 'src/app/core/model/process.description/process-offering';\n\nexport class ProcessDescriptionResponse {\n  private readonly _responseDocument: Document;\n  private readonly _processOffering: ProcessOffering;\n\n  constructor(processDescriptionResponse: any) {\n    if (processDescriptionResponse != null){\n      this._responseDocument = processDescriptionResponse.responseDocument;\n      this._processOffering = new ProcessOffering(processDescriptionResponse.processOffering);\n    }\n  }\n\n  get responseDocument(): Document {\n    return this._responseDocument;\n  }\n\n  get processOffering(): ProcessOffering {\n    return this._processOffering;\n  }\n}\n","import { Input } from './input';\nimport { Output } from 'src/app/core/model/process.description/output';\n\nexport class ProcessDetails {\n  private readonly _title: string;\n  private readonly _abstractValue: string;\n  private readonly _identifier: string;\n  private readonly _inputs: Input[];\n  private readonly _outputs: Output[];\n\n\n  constructor(processResponse: any) {\n    if (processResponse != null){\n      this._title = processResponse.title;\n      this._abstractValue = processResponse.abstractValue;\n      this._identifier = processResponse.identifier;\n      this._inputs = new Array<Input>();\n      processResponse.inputs?.forEach( e => {\n        this._inputs.push(new Input(e));\n      });\n      this._outputs = new Array<Output>();\n      processResponse.outputs?.forEach( e => {\n        this._outputs.push(new Output(e));\n      });\n    }\n  }\n\n  get title(): string {\n    return this._title;\n  }\n\n  get abstractValue(): string {\n    return this._abstractValue;\n  }\n\n  get identifier(): string {\n    return this._identifier;\n  }\n\n  get inputs(): Input[] {\n    return this._inputs;\n  }\n\n  get outputs(): Output[] {\n    return this._outputs;\n  }\n}\n","import { ProcessDetails } from 'src/app/core/model/process.description/process-details';\n\nexport class ProcessOffering {\n  private readonly _service: string;\n  private readonly _version: string;\n  private readonly _process: ProcessDetails;\n  private readonly _processVersion: string;\n  private readonly _jobControlOptions: string[];\n  private readonly _outputTransmissionModes: string[];\n\n  constructor(processOfferingResponse: any) {\n    if (processOfferingResponse != null){\n      this._service = processOfferingResponse.service;\n      this._version = processOfferingResponse.version;\n      this._process = new ProcessDetails(processOfferingResponse.process);\n      this._processVersion = processOfferingResponse.processVersion;\n      this._jobControlOptions = new Array<string>();\n      processOfferingResponse.jobControlOptions?.forEach(e => { // TODO: Enquire if this the only possible values are these 2\n        this._jobControlOptions.push(e);\n      });\n      this._outputTransmissionModes = new Array<string>();\n      processOfferingResponse.outputTransmissionModes?.forEach(e => {\n        this._outputTransmissionModes.push(e);\n      });\n    }\n  }\n\n  get service(): string {\n    return this._service;\n  }\n\n  get version(): string {\n    return this._version;\n  }\n\n  get process(): ProcessDetails {\n    return this._process;\n  }\n\n  get processVersion(): string {\n    return this._processVersion;\n  }\n\n  get jobControlOptions(): string[] {\n    return this._jobControlOptions;\n  }\n\n  get outputTransmissionModes(): string[] {\n    return this._outputTransmissionModes;\n  }\n\n\n}\n","export class Settings {\n  url: string;\n  version: string;\n\n  constructor(url:string, version: string,) {\n    this.version = version;\n    this.url = url;\n  }\n}\n","import {Component, OnInit, Output, EventEmitter} from '@angular/core';\nimport {WpsServiceTs} from '../wps-service-ts';\nimport {ExecuteResponse} from '../core/model/execute.process/response/execute-response';\nimport {ComplexDataInput} from '../core/model/execute.process/request/input/complex-data-input';\nimport {LiteralDataInput} from '../core/model/execute.process/request/input/literal-data-input';\nimport {ComplexDataOutput} from '../core/model/execute.process/request/output/complex-data-output';\nimport {DataInput} from '../core/model/execute.process/request/input/data-input';\nimport {DataOutput} from \"../core/model/execute.process/request/output/data-output\";\nimport {BBoxDataInput} from \"../core/model/execute.process/request/input/b-box-data-input\";\nimport {LiteralDataOutput} from \"../core/model/execute.process/request/output/literal-data-output\";\nimport {BBoxDataOutput} from \"../core/model/execute.process/request/output/b-box-data-output\";\n\n@Component({\n  selector: 'app-execute-examples',\n  templateUrl: './execute-examples.component.html',\n  styleUrls: ['./execute-examples.component.css']\n})\nexport class ExecuteExamplesComponent implements OnInit {\n  @Output() messageEvent  = new EventEmitter<any>();\n  urls: string[];\n  versions: string[];\n  selectedURL = 'http://geoprocessing.demo.52north.org:8080/wps/WebProcessingService';\n  selectedVersion = '1.0.0';\n  selectedProcessIdentifier: string;\n  active: boolean;\n  rightScreenTitle: string;\n  rightScreenJsonContent: string;\n  jobIdStatus: string;\n  jobIdResult: string;\n  wpsService: WpsServiceTs;\n  response: ExecuteResponse;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.wpsService = new WpsServiceTs( this.selectedVersion, this.selectedURL);\n    this.urls = [\n      'http://geoprocessing.demo.52north.org:8080/wps/WebProcessingService',\n      'https://ows.terrestris.de/deegree-wps/services',\n      'http://zoo-project.org/cgi-bin/zoo_loader.cgi',\n      'https://maps.dwd.de/geoserver/ows',\n      'https://riesgos.52north.org/wps/WebProcessingService'\n    ];\n    this.versions = ['1.0.0', '2.0.0'];\n    this.rightScreenTitle = 'Output appears here';\n  }\n\n  executeV1Sync() {\n    this.wpsService = new WpsServiceTs('2.0.0', 'http://geoprocessing.demo.52north.org:8080/wps/WebProcessingService');\n    const complexInput = new ComplexDataInput('data',\n      'application/x-zipped-shp',\n      'http://schemas.opengis.net/gml/3.1.1/base/feature.xsd', null, true,\n      'http://geoprocessing.demo.52north.org:8080/geoserver/wfs?SERVICE=WFS&amp;VERSION=1.0.0&amp;REQUEST=GetFeature&amp;TYPENAME=topp:tasmania_roads&amp;SRS=EPSG:4326&amp;OUTPUTFORMAT=GML3');\n    const literalInput = new LiteralDataInput('width', 'xs:double',\n      null, '0.05');\n    const dataInputList = new Array<DataInput>();\n    dataInputList.push(complexInput);\n    dataInputList.push(literalInput);\n\n    const complexDataOutput: ComplexDataOutput = new ComplexDataOutput('result', 'text/xml',\n      'http://schemas.opengis.net/gml/3.1.1/base/feature.xsd',\n      'UTF-8', null, false, 'result', 'result');\n\n    const dataOutputList = new Array<DataOutput>();\n    dataOutputList.push(complexDataOutput);\n\n    this.wpsService.execute((response: ExecuteResponse) => {\n        try {\n          console.log(response);\n          this.response = response;\n          this.sendMessage();\n        } catch (e){\n          console.error(e);\n        }\n      },\n      'org.n52.wps.server.algorithm.SimpleBufferAlgorithm',\n      'document',\n      'sync',\n      false,\n      dataInputList,\n      dataOutputList);\n  }\n\n  executeV1Async() {\n    this.wpsService = new WpsServiceTs('1.0.0', 'http://geoprocessing.demo.52north.org:8080/wps/WebProcessingService');\n    const complexInput = new ComplexDataInput('data',\n      'text/xml',\n      'http://schemas.opengis.net/gml/3.1.1/base/feature.xsd', null, true,\n      'http://geoprocessing.demo.52north.org:8080/geoserver/wfs?SERVICE=WFS&amp;VERSION=1.0.0&amp;REQUEST=GetFeature&amp;TYPENAME=topp:tasmania_roads&amp;SRS=EPSG:4326&amp;OUTPUTFORMAT=GML3');\n    const literalInput = new LiteralDataInput('width', 'xs:double',\n      null, '0.05');\n    const dataInputList = new Array<DataInput>();\n    dataInputList.push(complexInput);\n    dataInputList.push(literalInput);\n\n    const complexDataOutput: ComplexDataOutput = new ComplexDataOutput('result', 'text/xml',\n      'http://schemas.opengis.net/gml/3.1.1/base/feature.xsd',\n      'UTF-8', null, false, 'result', 'result');\n\n    const dataOutputList = new Array<DataOutput>();\n    dataOutputList.push(complexDataOutput);\n\n    this.wpsService.execute((response: ExecuteResponse) => {\n        try {\n          console.log(response);\n          this.response = response;\n          this.sendMessage();\n        } catch (e){\n          console.error(e);\n        }\n      },\n      'org.n52.wps.server.algorithm.SimpleBufferAlgorithm',\n      'document',\n      'async',\n      false,\n      dataInputList,\n      dataOutputList);\n  }\n\n  executeV2Sync() {\n    this.wpsService = new WpsServiceTs('2.0.0', 'http://geoprocessing.demo.52north.org:8080/wps/WebProcessingService');\n    const complexInput = new ComplexDataInput('data',\n      'text/xml', 'http://schemas.opengis.net/gml/3.1.1/base/feature.xsd', null, true,\n      'http://geoprocessing.demo.52north.org:8080/geoserver/wfs?SERVICE=WFS&amp;VERSION=1.0.0&amp;REQUEST=GetFeature&amp;TYPENAME=topp:tasmania_roads&amp;SRS=EPSG:4326&amp;OUTPUTFORMAT=GML3');\n    const literalInput = new LiteralDataInput('width', null,\n      null, '0.05');\n    const inputs = [complexInput, literalInput];\n\n    const complexOutput = new ComplexDataOutput('result', 'text/xml',\n      'http://schemas.opengis.net/gml/3.1.1/base/feature.xsd', 'UTF-8', undefined, undefined, undefined, undefined, undefined, 'value');\n    const outputs = [complexOutput];\n\n\n    this.wpsService.execute( (response => {\n        console.log(response);\n        this.response = response;\n        this.sendMessage();\n      }), 'org.n52.wps.server.algorithm.SimpleBufferAlgorithm', 'document',\n      'sync', false, inputs, outputs);\n  }\n\n  executeV2Async() {\n    this.wpsService = new WpsServiceTs('2.0.0', 'http://geoprocessing.demo.52north.org:8080/wps/WebProcessingService');\n    const complexInput = new ComplexDataInput('data',\n      'text/xml', 'http://schemas.opengis.net/gml/3.1.1/base/feature.xsd', null, true,\n      'http://geoprocessing.demo.52north.org:8080/geoserver/wfs?SERVICE=WFS&amp;VERSION=1.0.0&amp;REQUEST=GetFeature&amp;TYPENAME=topp:tasmania_roads&amp;SRS=EPSG:4326&amp;OUTPUTFORMAT=GML3');\n    const literalInput = new LiteralDataInput('width', null,\n      null, '0.05');\n    const inputs = [complexInput, literalInput];\n\n    const complexOutput = new ComplexDataOutput('result', 'text/xml',\n      'http://schemas.opengis.net/gml/3.1.1/base/feature.xsd', 'UTF-8', undefined, undefined, undefined, undefined, undefined, 'value');\n    const outputs = [complexOutput];\n\n\n    this.wpsService.execute( (response => {\n        console.log(response);\n        this.response = response;\n        this.sendMessage();\n      }), 'org.n52.wps.server.algorithm.SimpleBufferAlgorithm', 'document',\n      'async', false, inputs, outputs);\n  }\n\n  executeExample_SimpleBufferAlgorithm() {\n    this.wpsService = new WpsServiceTs('2.0.0', 'http://geoprocessing.demo.52north.org:8080/wps/WebProcessingService');\n    const complexInput = new ComplexDataInput('data',\n      'text/xml', 'http://schemas.opengis.net/gml/3.1.1/base/feature.xsd', null, true,\n      'http://geoprocessing.demo.52north.org:8080/geoserver/wfs?SERVICE=WFS&amp;VERSION=1.0.0&amp;REQUEST=GetFeature&amp;TYPENAME=topp:tasmania_roads&amp;SRS=EPSG:4326&amp;OUTPUTFORMAT=GML3');\n    const literalInput = new LiteralDataInput('width', null,\n      null, '0.05');\n    const inputs = [complexInput, literalInput];\n\n    const complexOutput = new ComplexDataOutput('result', 'text/xml',\n      'http://schemas.opengis.net/gml/3.1.1/base/feature.xsd', 'UTF-8', undefined, undefined, undefined, undefined, undefined, 'value');\n    const outputs = [complexOutput];\n\n\n    this.wpsService.execute( (response => {\n        console.log(response);\n        this.response = response;\n        this.sendMessage();\n      }), 'org.n52.wps.server.algorithm.SimpleBufferAlgorithm', 'document',\n      'async', false, inputs, outputs);\n  }\n\n\n  executeExample_TiffImage() {\n    this.wpsService = new WpsServiceTs('1.0.0', 'http://geoprocessing.demo.52north.org:8080/wps/WebProcessingService');\n\n    const complexInput = new ComplexDataInput('input',\n      'image/tiff', 'http://www.opengis.net/ows/1.1', undefined, true,\n      'http://geoprocessing.demo.52north.org:8080/xyz/elev_srtm_30m.tif');\n    const inputs = [complexInput];\n\n    const complexOutput = new ComplexDataOutput('output', 'image/tiff',\n      undefined, undefined, undefined, undefined, undefined, undefined);\n    const outputs = [complexOutput];\n\n    this.wpsService.execute( (response => {\n        console.log(response);\n        this.response = response;\n        this.sendMessage();\n      }), 'r.resample', 'document',\n      'async', false, inputs, outputs);\n  }\n\n  executeInlineShape62_Inline() {\n    this.wpsService = new WpsServiceTs('1.0.0', 'http://geoprocessing.demo.52north.org:8080/wps/WebProcessingService');\n\n    const complexInput = new ComplexDataInput('data',\n      'application/x-zipped-shp', undefined, 'base64', false,\n      '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');\n\n    const literalInput = new LiteralDataInput('width', undefined,\n      undefined, '0.05');\n    const inputs = [complexInput, literalInput];\n\n    const complexOutput = new ComplexDataOutput('result', 'application/x-zipped-shp',\n      undefined, 'base64', undefined, undefined, undefined, undefined, undefined, undefined );\n    const outputs = [complexOutput];\n\n    this.wpsService.execute( (response => {\n        console.log(response);\n        this.response = response;\n        this.sendMessage();\n      }), 'org.n52.wps.server.algorithm.SimpleBufferAlgorithm', 'document',\n      'sync', false, inputs, outputs);\n  }\n\n  executeExample_ManyInputs() {\n    this.wpsService = new WpsServiceTs('2.0.0', 'https://riesgos.52north.org/wps/WebProcessingService');\n\n    const inputBoundingBox = new BBoxDataInput('input-boundingbox', 'EPSG:4326', '2',\n      '-14.093957177836224 -260.2059521933809', '-14.00869637063467 -260.2059521933809');\n    const mmin = new LiteralDataInput('mmin', null, null, '6.6');\n    const mmax = new LiteralDataInput('mmax', null, null, '8.5');\n    const zmin = new LiteralDataInput('zmin', null, null, '5');\n    const zmax = new LiteralDataInput('zmax', null, null, '140');\n    const p = new LiteralDataInput('p', null, null, '0.1');\n    const etype = new LiteralDataInput('etype', null, null, 'deaggregation');\n    const tlon = new LiteralDataInput('tlon', null, null, '-71.5730623712764');\n    const tlat = new LiteralDataInput('tlat', null, null, '-33.1299174879672');\n    const inputs = [inputBoundingBox, mmin, mmax, zmin, zmax, p, etype, tlon, tlat];\n\n    const complexOutput = new ComplexDataOutput('selected-rows', 'application/vnd.geo+json',\n      undefined, 'UTF-8', undefined, undefined, undefined, undefined, undefined, 'value');\n    const outputs = [complexOutput];\n\n    this.wpsService.execute( (response => {\n        console.log(response);\n        this.response = response;\n        this.sendMessage();\n      }), 'org.n52.wps.python.algorithm.QuakeMLProcessBBox', 'document',\n      'sync', false, inputs, outputs);\n  }\n\n  executeExample_echoProcess() {\n    this.wpsService = new WpsServiceTs('1.0.0', 'http://geoprocessing.demo.52north.org:8080/wps/WebProcessingService');\n    const complexInput = new ComplexDataInput('complexInput', 'text/xml',\n      null, null, null,\n      'test');\n    const literalInput = new LiteralDataInput('literalInput', null,\n      null, '0.05');\n    const boundingBoxInput = new BBoxDataInput('boundingboxInput', 'EPSG:4326', '2',\n      '-14.093957177836224 -260.2059521933809', '-14.00869637063467 -260.2059521933809');\n    const inputs = [complexInput, literalInput];\n\n    const literalOutput = new LiteralDataOutput('literalOutput', 'text/xml', undefined, undefined,\n      undefined, undefined, undefined, undefined, 'test');\n    const bboxOutput =  new BBoxDataOutput('boundingboxOutput', undefined, undefined,\n      undefined, undefined, undefined, undefined, undefined);\n    const complexOutput = new ComplexDataOutput('complexOutput', undefined, undefined, undefined,\n      undefined, undefined, undefined, undefined, undefined, 'value');\n    const outputs = [ complexOutput, literalOutput];\n\n\n    this.wpsService.execute( (response => {\n        console.log(response);\n        this.response = response;\n        this.sendMessage();\n      }), 'org.n52.wps.server.algorithm.test.EchoProcess', 'document',\n      'sync', false, inputs, outputs);\n  }\n  sendMessage(){\n    this.messageEvent.emit(this.response);\n  }\n}\n","<h3>Execute Process</h3>\n\n\n<!--\n<form class=\"form-inline\">\n  <div class=\"form-group mb-2\">\n    <label>\n      <input type=\"text\" readonly class=\"form-control-plaintext\"  value=\"Execute V1 Sync\">\n    </label>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary mb-2\" (click)=\"executeV1Sync()\">Test</button>\n</form>\n-->\n\n\n<form class=\"form-inline\">\n  <div class=\"form-group mb-2\">\n    <label>\n      <input type=\"text\" readonly class=\"form-control-plaintext\"  value=\"Execute V2 Sync\">\n    </label>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary mb-2\" (click)=\"executeV2Sync()\">Test</button>\n</form>\n\n<form class=\"form-inline\">\n  <div class=\"form-group mb-2\">\n    <label>\n      <input type=\"text\" readonly class=\"form-control-plaintext\"  value=\"Execute V1 ASync\">\n    </label>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary mb-2\" (click)=\"executeV1Async()\">Test</button>\n</form>\n\n\n<form class=\"form-inline\">\n  <div class=\"form-group mb-2\">\n    <label>\n      <input type=\"text\" readonly class=\"form-control-plaintext\"  value=\"Simple Buffer Algorithm\">\n    </label>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary mb-2\" (click)=\"executeExample_SimpleBufferAlgorithm()\">Test</button>\n</form>\n\n<form class=\"form-inline\">\n  <div class=\"form-group mb-2\">\n    <label>\n      <input type=\"text\" readonly class=\"form-control-plaintext\"  value=\"Execute V2 Async\">\n    </label>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary mb-2\" (click)=\"executeV2Async()\">Test</button>\n</form>\n\n<form class=\"form-inline\">\n  <div class=\"form-group mb-2\">\n    <label>\n      <input type=\"text\" readonly class=\"form-control-plaintext\"  value=\"Tiff Raw Data Response\">\n    </label>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary mb-2\" (click)=\"executeExample_TiffImage()\">Test</button>\n</form>\n\n<form class=\"form-inline\">\n  <div class=\"form-group mb-2\">\n    <label>\n      <input type=\"text\" readonly class=\"form-control-plaintext\"  value=\"Execute Shape inline\">\n    </label>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary mb-2\" (click)=\"executeInlineShape62_Inline()\">Test</button>\n</form>\n\n<form class=\"form-inline\">\n  <div class=\"form-group mb-2\">\n    <label>\n      <input type=\"text\" readonly class=\"form-control-plaintext\"  value=\"Many Inputs\">\n    </label>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary mb-2\" (click)=\"executeExample_ManyInputs()\">Test</button>\n</form>\n\n<!--\n<form class=\"form-inline\">\n  <div class=\"form-group mb-2\">\n    <label>\n      <input type=\"text\" readonly class=\"form-control-plaintext\"  value=\"Echo Process\">\n    </label>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary mb-2\" (click)=\"executeExample_echoProcess()\">Test</button>\n</form>\n-->\n","import { Component, OnInit } from '@angular/core';\nimport {WpsServiceTs} from '../wps-service-ts';\nimport {CapabilitiesResponse} from '../core/model/capabilities/capabilities-response';\nimport {ProcessDescriptionResponse} from '../core/model/process.description/process-description-response';\nimport {WpsNgService} from 'wps-ng';\n\n@Component({\n  selector: 'app-wps-example',\n  templateUrl: './wps-example.component.html',\n  styleUrls: ['./wps-example.component.css']\n})\n\nexport class WpsExampleComponent implements OnInit {\n  private WPS_VERSION_1 = '1.0.0';\n  private WPS_VERSION_2 = '2.0.0';\n  private wpsServiceJS: any;\n  title: CapabilitiesResponse;\n  selectedURL = 'http://geoprocessing.demo.52north.org:8080/wps/WebProcessingService';\n  selectedVersion = '2.0.0';\n  urls: string[];\n  versions: string[];\n  capabilitiesResponse: CapabilitiesResponse;\n  selectedProcessIdentifier: string;\n  private wpsService: WpsServiceTs;\n  processDescriptionResponse: ProcessDescriptionResponse;\n  rightScreenTitle: string;\n  rightScreenJsonContent: string;\n  jobIdResult: string;\n  jobIdStatus: any;\n\n\n  ngOnInit(): void {\n    this.wpsService = new WpsServiceTs( this.selectedVersion, this.selectedURL);\n    this.urls = [\n      'http://geoprocessing.demo.52north.org:8080/wps/WebProcessingService',\n      'https://ows.terrestris.de/deegree-wps/services',\n      'http://zoo-project.org/cgi-bin/zoo_loader.cgi',\n      'https://maps.dwd.de/geoserver/ows'\n    ];\n    this.versions = ['1.0.0', '2.0.0'];\n    this.rightScreenTitle = 'Output appears here';\n  }\n\n\n  getCapabilitiesGET() {\n    this.wpsService = new WpsServiceTs(this.selectedVersion, this.selectedURL);\n    this.wpsService.getCapabilitiesGET( (e: CapabilitiesResponse) => {\n      console.log(e);\n      this.capabilitiesResponse = e;\n      this.updateRightScreenContents('Typescript Casted Capabilities Response', this.capabilitiesResponse);\n    });\n  }\n\n  getCapabilitiesPOST() {\n    this.wpsService = new WpsServiceTs(this.selectedVersion, this.selectedURL);\n    this.wpsService.getCapabilitiesPOST( (e: CapabilitiesResponse) => {\n      console.log(e);\n      this.capabilitiesResponse = e;\n      this.updateRightScreenContents('Typescript Casted Capabilities Response', this.capabilitiesResponse);\n    });\n  }\n\n  processDescriptionGet() {\n    this.wpsService.processDescriptionGet(this.selectedProcessIdentifier, (e: ProcessDescriptionResponse) => {\n      console.log(e);\n      this.processDescriptionResponse = e;\n      this.updateRightScreenContents('Typescript Casted Process Description Response', this.processDescriptionResponse);\n    });\n  }\n\n  processDescriptionPost(){\n    this.wpsService.processDescriptionPost(this.selectedProcessIdentifier, (e: ProcessDescriptionResponse) => {\n      console.log(e);\n      this.processDescriptionResponse = e;\n      this.updateRightScreenContents('Typescript Casted Process Description Response', this.processDescriptionResponse);\n    });\n  }\n\n\n  updateRightScreenContents(title: string, jsonContent: any) {\n    this.rightScreenTitle = title;\n    this.rightScreenJsonContent = jsonContent;\n  }\n\n  receiveMessage($event){\n    this.updateRightScreenContents('Execute Process', $event);\n  }\n\n  getStatus() {\n\n  }\n\n  getResult() {\n\n  }\n}\n","<body>\n<div class=\"split left\">\n  <nav>\n    <div class=\"nav nav-tabs\" id=\"nav-tab\" role=\"tablist\">\n      <a class=\"nav-item nav-link active\" id=\"nav-home-tab\" data-toggle=\"tab\" href=\"#nav-home\" role=\"tab\" aria-controls=\"nav-home\" aria-selected=\"true\">Capabilities</a>\n      <a class=\"nav-item nav-link\" id=\"nav-profile-tab\" data-toggle=\"tab\" href=\"#nav-profile\" role=\"tab\" aria-controls=\"nav-profile\" aria-selected=\"false\">Process Description</a>\n      <a class=\"nav-item nav-link\" id=\"nav-contact-tab\" data-toggle=\"tab\" href=\"#nav-contact\" role=\"tab\" aria-controls=\"nav-contact\" aria-selected=\"false\">Execute</a>\n      <a class=\"nav-item nav-link\" id=\"nav-4-tab\" data-toggle=\"tab\" href=\"#nav-4\" role=\"tab\" aria-controls=\"nav-4\" aria-selected=\"false\">Status & Result</a>\n    </div>\n  </nav>\n  <div class=\"tab-content\" id=\"nav-tabContent\">\n    <div class=\"tab-pane fade show active\" id=\"nav-home\" role=\"tabpanel\" aria-labelledby=\"nav-home-tab\">\n      <h3>Capabilities</h3>\n      <form wps-example-form=\"ngForm\">\n        <div class=\"form-group\">\n          <label for=\"version\">Version</label>\n          <select class=\"form-control\" [(ngModel)]=\"selectedVersion\" id=\"version\" name=\"version\" ngModel required>\n            <option *ngFor=\"let version of versions\" [value]=\"version\" selected=\"selected\">{{version}}</option>\n          </select>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"url\">URL</label>\n          <select class=\"form-control\" [(ngModel)]=\"selectedURL\" name=\"url\" id=\"url\" ngModel required>\n            <option *ngFor=\"let url of urls\" [value]=\"url\" >{{url}}</option>\n          </select>\n        </div>\n        <button (click)=\"getCapabilitiesGET()\" >Capabilities Get</button>\n        <button (click)=\"getCapabilitiesPOST()\">Capabilities Post</button>\n\n        <div *ngIf=\"capabilitiesResponse\">\n          <label for=\"capabilities\">Capabilities List:</label>\n          <select class=\"form-control\" [(ngModel)]=\"selectedProcessIdentifier\" name=\"capabilities\"  ngModel>\n            <option *ngFor=\"let capability of capabilitiesResponse.capabilities.processes\" [value]=\"capability.identifier\" >{{capability.title}}</option>\n          </select>\n        </div>\n\n      </form>\n    </div>\n    <div class=\"tab-pane fade\" id=\"nav-profile\" role=\"tabpanel\" aria-labelledby=\"nav-profile-tab\">\n      <form wps-example-form=\"ngForm\">\n        <div *ngIf=\"capabilitiesResponse\">\n          <h3>Process Description:</h3>\n\n          <label for=\"capabilities\">Capabilities List:</label>\n          <select class=\"form-control\" [(ngModel)]=\"selectedProcessIdentifier\" name=\"capabilities\" id=\"capabilities\"  ngModel>\n            <option *ngFor=\"let capability of capabilitiesResponse.capabilities.processes\" [value]=\"capability.identifier\" >{{capability.title}}</option>\n          </select>\n          <button (click)=\"processDescriptionGet()\">Process Details Get</button>\n          <button (click)=\"processDescriptionPost()\">Process Details Post</button>\n        </div>\n        <div *ngIf=\"!capabilitiesResponse\">\n          <h3>Process Description:</h3>\n          <h5>Fetch Capabilities to get the list of process available.</h5>\n        </div>\n      </form>\n    </div>\n    <div class=\"tab-pane fade\" id=\"nav-contact\" role=\"tabpanel\" aria-labelledby=\"nav-contact-tab\">\n      <app-execute-examples (messageEvent)=\"receiveMessage($event)\"></app-execute-examples>\n    </div>\n\n    <div class=\"tab-pane fade\" id=\"nav-4\" role=\"tabpanel\" aria-labelledby=\"nav-profile-tab\">\n      <div class=\"input-group mb-3\">\n        <input  [(ngModel)]=\"jobIdStatus\" type=\"text\" class=\"form-control\" placeholder=\"Job Id\" aria-label=\"Job Id\" aria-describedby=\"button-addon1\">\n        <div class=\"input-group-append\">\n          <button  (click)=\"getStatus()\" class=\"btn btn-outline-secondary\" type=\"button\" id=\"button-addon1\">Get Status</button>\n        </div>\n      </div>\n      <div class=\"input-group mb-3\">\n        <input [(ngModel)]=\"jobIdResult\" type=\"text\" class=\"form-control\" placeholder=\"Job Id\" aria-label=\"Job Id\" aria-describedby=\"button-addon2\">\n        <div class=\"input-group-append\">\n          <button (click)=\"getResult()\" class=\"btn btn-outline-secondary\" type=\"button\" id=\"button-addon2\">Get Result</button>\n        </div>\n      </div>\n    </div>\n\n  </div>\n</div>\n\n<div class=\"split right\">\n  <div class=\"jumbotron\" >\n    <h3>{{ rightScreenTitle }}</h3>\n    <pre>{{ rightScreenJsonContent | json }}</pre>\n  </div>\n</div>\n</body>\n","import {Settings} from './core/settings';\nimport {CapabilitiesResponse} from './core/model/capabilities/capabilities-response';\nimport {ProcessDescriptionResponse} from './core/model/process.description/process-description-response';\nimport {ExecuteResponse} from './core/model/execute.process/response/execute-response';\nimport {DataInput} from './core/model/execute.process/request/input/data-input';\nimport {DataOutput} from './core/model/execute.process/request/output/data-output';\n\nconst WPS_VERSION_1 = '1.0.0';\nconst WPS_VERSION_2 = '2.0.0';\ndeclare var WpsService: any;\n\nexport class WpsServiceTs {\n\n  constructor(private version: string , private url: string) {\n    // Url Check\n    if (!WpsServiceTs.isValidUrl(url)) {\n      throw new Error('Url ' + url + ' is not valid.');\n    }\n    // Version Check\n    this.version = (version === WPS_VERSION_2) ? WPS_VERSION_2 : WPS_VERSION_1;\n\n    const setting = new Settings(url, version);\n    this.wpsServiceJS = new WpsService(setting);\n  }\n\n  private wpsServiceJS: any;\n\n\n  /**\n   * Utility Function to check URL Validity\n   */\n  static isValidUrl(url: string) {\n    try {\n      // tslint:disable-next-line:no-unused-expression\n      new URL(url);\n    } catch (_) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * allowed values : \"1.0.0\" or \"2.0.0\"\n   *\n   * requires Constant.js\n   */\n  setVersion(version: string = WPS_VERSION_2){\n    this.version = (version === WPS_VERSION_2) ? WPS_VERSION_2 : WPS_VERSION_1;\n  }\n\n  /**\n   * allowed values : \"1.0.0\" or \"2.0.0\"\n   *\n   * requires Constant.js\n   */\n  setUrl(url: string){\n    if (!WpsServiceTs.isValidUrl(url)) {\n      throw new Error('Url ' + url + ' is not valid.');\n    }\n    this.url = url;\n  }\n\n  /**\n   * getCapabilities via HTTP GET\n   *\n   * @callbackFunction is triggered on success-event of JQuery.ajax method\n   */\n  getCapabilitiesGET(callback: (capabilitiesResponse: CapabilitiesResponse) => void) {\n    let capabilitiesResponse: CapabilitiesResponse;\n    this.wpsServiceJS.getCapabilities_GET((response: any) => {\n      capabilitiesResponse = new CapabilitiesResponse(response);\n      callback(capabilitiesResponse);\n    });\n  }\n\n  /**\n   * getCapabilities via HTTP Post\n   *\n   * @callbackFunction is triggered on success-event of JQuery.ajax method\n   */\n  getCapabilitiesPOST(callback: (capabilitiesResponse: CapabilitiesResponse) => void) {\n    let capabilitiesResponse: CapabilitiesResponse;\n    this.wpsServiceJS.getCapabilities_POST((response: any) => {\n      capabilitiesResponse = new CapabilitiesResponse(response);\n      callback(capabilitiesResponse);\n    });\n  }\n\n  /**\n   * process description via HTTP GET\n   *\n   * @callbackFunction is triggered on success-event of JQuery.ajax method.\n   *                   Takes the response object as argument\n   * @processIdentifier the identifier of the process\n   */\n  processDescriptionGet( processIdentifier: string , callback: (response: ProcessDescriptionResponse) => void) {\n    let processDescriptionResponse: ProcessDescriptionResponse;\n    this.wpsServiceJS.describeProcess_GET( (response: any) => {\n      processDescriptionResponse = new ProcessDescriptionResponse(response);\n      callback(processDescriptionResponse);\n    }, processIdentifier);\n  }\n\n  /**\n   * process description via HTTP POST\n   *\n   * @callbackFunction is triggered on success-event of JQuery.ajax method.\n   *                   Takes the response object as argument\n   * @processIdentifier the identifier of the process\n   */\n  processDescriptionPost( processIdentifier: string , callback: (response: ProcessDescriptionResponse) => void) {\n    let processDescriptionResponse: ProcessDescriptionResponse;\n    this.wpsServiceJS.describeProcess_POST( (response: any) => {\n      processDescriptionResponse = new ProcessDescriptionResponse(response);\n      callback(processDescriptionResponse);\n    }, processIdentifier);\n  }\n\n\n  /**\n   * WPS execute request via HTTP POST\n   *\n   * @callbackFunction is triggered on success-event of JQuery.ajax method.\n   *                   Takes the response object as argument\n   * @processIdentifier the identifier of the process\n   * @responseFormat either \"raw\" or \"document\", default is \"document\"\n   * @executionMode either \"sync\" or \"async\";\n   * @lineage only relevant for WPS 1.0; boolean, if \"true\" then returned\n   *          response will include original input and output definition\n   * @inputs an array of needed Input objects, use JS-object InputGenerator to\n   *         create inputs\n   * @outputs an array of requested Output objects, use JS-object\n   *          OutputGenerator to create inputs\n   */\n\n  execute(callback: (response: ExecuteResponse) => void , processIdentifier: string, responseFormat: string, executionMode: string,\n          lineage: boolean, inputs: Array<DataInput>, outputs: Array<DataOutput>) {\n    let executeResponse;\n    this.wpsServiceJS.execute( (response: any) => {\n      // Check for error\n      if (response.textStatus === 'error') {\n        throw new Error(response.errorThrown);\n      }\n      executeResponse = response;\n      callback(new ExecuteResponse(executeResponse));\n    }, processIdentifier, responseFormat, executionMode, lineage, inputs, outputs);\n  }\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}